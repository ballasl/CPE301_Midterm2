
CpE301 - Midterm 2-RX.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000038  00800200  00000efc  00000f90  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000efc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800238  00800238  00000fc8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000fc8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001024  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00001064  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002109  00000000  00000000  0000116c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f43  00000000  00000000  00003275  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000098f  00000000  00000000  000041b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000354  00000000  00000000  00004b48  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000088e  00000000  00000000  00004e9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f3a  00000000  00000000  0000572a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  00006664  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	b5 c0       	rjmp	.+362    	; 0x170 <__vector_1>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ec ef       	ldi	r30, 0xFC	; 252
  fc:	fe e0       	ldi	r31, 0x0E	; 14
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a8 33       	cpi	r26, 0x38	; 56
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a8 e3       	ldi	r26, 0x38	; 56
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ad 33       	cpi	r26, 0x3D	; 61
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	a3 d0       	rcall	.+326    	; 0x266 <main>
 120:	eb c6       	rjmp	.+3542   	; 0xef8 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <setup_rf>:
	}

	return 0;
}

nRF24L01 *setup_rf(void) {
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
	nRF24L01 *rf = nRF24L01_init();
 128:	ea d0       	rcall	.+468    	; 0x2fe <nRF24L01_init>
 12a:	ec 01       	movw	r28, r24

	//DDRB |= (1<<DDB1);

	rf->ss.port = &PORTL;
 12c:	8b e0       	ldi	r24, 0x0B	; 11
 12e:	91 e0       	ldi	r25, 0x01	; 1
 130:	99 83       	std	Y+1, r25	; 0x01
 132:	88 83       	st	Y, r24
	rf->ss.pin = PINL1;
 134:	21 e0       	ldi	r18, 0x01	; 1
 136:	2a 83       	std	Y+2, r18	; 0x02
	rf->ce.port = &PORTB;
 138:	85 e2       	ldi	r24, 0x25	; 37
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	9c 83       	std	Y+4, r25	; 0x04
 13e:	8b 83       	std	Y+3, r24	; 0x03
	rf->ce.pin = PINB0;
 140:	1d 82       	std	Y+5, r1	; 0x05

	rf->sck.port = &PORTB;
 142:	9f 83       	std	Y+7, r25	; 0x07
 144:	8e 83       	std	Y+6, r24	; 0x06
	rf->sck.pin = PINB1;
 146:	28 87       	std	Y+8, r18	; 0x08
	rf->mosi.port = &PORTB;
 148:	9a 87       	std	Y+10, r25	; 0x0a
 14a:	89 87       	std	Y+9, r24	; 0x09
	rf->mosi.pin = PINB2;
 14c:	22 e0       	ldi	r18, 0x02	; 2
 14e:	2b 87       	std	Y+11, r18	; 0x0b
	rf->miso.port = &PORTB;
 150:	9d 87       	std	Y+13, r25	; 0x0d
 152:	8c 87       	std	Y+12, r24	; 0x0c
	rf->miso.pin = PINB3;
 154:	83 e0       	ldi	r24, 0x03	; 3
 156:	8e 87       	std	Y+14, r24	; 0x0e
	// interrupt on falling edge of INT0 (PD2)
	//DDRD = 0xFE;
	//PORTD &= ~0x01;
	EICRA |= (1<<ISC01);
 158:	e9 e6       	ldi	r30, 0x69	; 105
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	80 81       	ld	r24, Z
 15e:	82 60       	ori	r24, 0x02	; 2
 160:	80 83       	st	Z, r24
	EIMSK |= (1<<INT0);
 162:	e8 9a       	sbi	0x1d, 0	; 29
	nRF24L01_begin(rf);
 164:	ce 01       	movw	r24, r28
 166:	ae d1       	rcall	.+860    	; 0x4c4 <nRF24L01_begin>
	return rf;
}
 168:	ce 01       	movw	r24, r28
 16a:	df 91       	pop	r29
 16c:	cf 91       	pop	r28
 16e:	08 95       	ret

00000170 <__vector_1>:
	sprintf(printBuffer, tempTemplate, message);
	USARTSendStr(printBuffer);
}

// nRF24L01 interrupt
ISR(INT0_vect) {
 170:	1f 92       	push	r1
 172:	0f 92       	push	r0
 174:	0f b6       	in	r0, 0x3f	; 63
 176:	0f 92       	push	r0
 178:	11 24       	eor	r1, r1
 17a:	8f 93       	push	r24
	rf_interrupt = true;
 17c:	81 e0       	ldi	r24, 0x01	; 1
 17e:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <__data_end>
}
 182:	8f 91       	pop	r24
 184:	0f 90       	pop	r0
 186:	0f be       	out	0x3f, r0	; 63
 188:	0f 90       	pop	r0
 18a:	1f 90       	pop	r1
 18c:	18 95       	reti

0000018e <usart_init>:

void usart_init()
{
	UBRR0H = (MYUBRR) >> 8;
 18e:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
	UBRR0L = MYUBRR;
 192:	87 e6       	ldi	r24, 0x67	; 103
 194:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
	UCSR0B |= (1 << TXEN0); // Enable Transmitter
 198:	e1 ec       	ldi	r30, 0xC1	; 193
 19a:	f0 e0       	ldi	r31, 0x00	; 0
 19c:	80 81       	ld	r24, Z
 19e:	88 60       	ori	r24, 0x08	; 8
 1a0:	80 83       	st	Z, r24
	UCSR0C |=  (1 << UCSZ01) | (1 << UCSZ00); // Set frame: 8data, 1 stop
 1a2:	e2 ec       	ldi	r30, 0xC2	; 194
 1a4:	f0 e0       	ldi	r31, 0x00	; 0
 1a6:	80 81       	ld	r24, Z
 1a8:	86 60       	ori	r24, 0x06	; 6
 1aa:	80 83       	st	Z, r24
 1ac:	08 95       	ret

000001ae <USART0SendByte>:
}

int USART0SendByte(char u8Data)
{
	//wait while previous byte is completed
	while(!(UCSR0A&(1<<UDRE0))){};
 1ae:	e0 ec       	ldi	r30, 0xC0	; 192
 1b0:	f0 e0       	ldi	r31, 0x00	; 0
 1b2:	90 81       	ld	r25, Z
 1b4:	95 ff       	sbrs	r25, 5
 1b6:	fd cf       	rjmp	.-6      	; 0x1b2 <USART0SendByte+0x4>
	// Transmit data
	UDR0=u8Data;
 1b8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
	return 0;
}
 1bc:	80 e0       	ldi	r24, 0x00	; 0
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	08 95       	ret

000001c2 <USARTSendStr>:

void USARTSendStr(char* _str)
{
 1c2:	ef 92       	push	r14
 1c4:	ff 92       	push	r15
 1c6:	0f 93       	push	r16
 1c8:	1f 93       	push	r17
 1ca:	cf 93       	push	r28
	int thesize=strlen(_str);
 1cc:	fc 01       	movw	r30, r24
 1ce:	01 90       	ld	r0, Z+
 1d0:	00 20       	and	r0, r0
 1d2:	e9 f7       	brne	.-6      	; 0x1ce <USARTSendStr+0xc>
 1d4:	31 97       	sbiw	r30, 0x01	; 1
 1d6:	8f 01       	movw	r16, r30
 1d8:	08 1b       	sub	r16, r24
 1da:	19 0b       	sbc	r17, r25
	for (uint8_t i=0; i<thesize;i++)
 1dc:	10 16       	cp	r1, r16
 1de:	11 06       	cpc	r1, r17
 1e0:	6c f4       	brge	.+26     	; 0x1fc <USARTSendStr+0x3a>
 1e2:	7c 01       	movw	r14, r24
 1e4:	c0 e0       	ldi	r28, 0x00	; 0
	{
		USART0SendByte(_str[i]);
 1e6:	f7 01       	movw	r30, r14
 1e8:	ec 0f       	add	r30, r28
 1ea:	f1 1d       	adc	r31, r1
 1ec:	80 81       	ld	r24, Z
 1ee:	df df       	rcall	.-66     	; 0x1ae <USART0SendByte>
}

void USARTSendStr(char* _str)
{
	int thesize=strlen(_str);
	for (uint8_t i=0; i<thesize;i++)
 1f0:	cf 5f       	subi	r28, 0xFF	; 255
 1f2:	2c 2f       	mov	r18, r28
 1f4:	30 e0       	ldi	r19, 0x00	; 0
 1f6:	20 17       	cp	r18, r16
 1f8:	31 07       	cpc	r19, r17
 1fa:	ac f3       	brlt	.-22     	; 0x1e6 <USARTSendStr+0x24>
	{
		USART0SendByte(_str[i]);
	}
 1fc:	cf 91       	pop	r28
 1fe:	1f 91       	pop	r17
 200:	0f 91       	pop	r16
 202:	ff 90       	pop	r15
 204:	ef 90       	pop	r14
 206:	08 95       	ret

00000208 <process_message>:
	EIMSK |= (1<<INT0);
	nRF24L01_begin(rf);
	return rf;
}

void process_message(char *message) {
 208:	0f 93       	push	r16
 20a:	1f 93       	push	r17
 20c:	cf 93       	push	r28
 20e:	df 93       	push	r29
 210:	cd b7       	in	r28, 0x3d	; 61
 212:	de b7       	in	r29, 0x3e	; 62
 214:	c0 54       	subi	r28, 0x40	; 64
 216:	d1 09       	sbc	r29, r1
 218:	0f b6       	in	r0, 0x3f	; 63
 21a:	f8 94       	cli
 21c:	de bf       	out	0x3e, r29	; 62
 21e:	0f be       	out	0x3f, r0	; 63
 220:	cd bf       	out	0x3d, r28	; 61
	char printBuffer[64];
	sprintf(printBuffer, tempTemplate, message);
 222:	9f 93       	push	r25
 224:	8f 93       	push	r24
 226:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <tempTemplate+0x1>
 22a:	8f 93       	push	r24
 22c:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <tempTemplate>
 230:	8f 93       	push	r24
 232:	8e 01       	movw	r16, r28
 234:	0f 5f       	subi	r16, 0xFF	; 255
 236:	1f 4f       	sbci	r17, 0xFF	; 255
 238:	1f 93       	push	r17
 23a:	0f 93       	push	r16
 23c:	82 d3       	rcall	.+1796   	; 0x942 <sprintf>
	USARTSendStr(printBuffer);
 23e:	c8 01       	movw	r24, r16
 240:	c0 df       	rcall	.-128    	; 0x1c2 <USARTSendStr>
}
 242:	0f 90       	pop	r0
 244:	0f 90       	pop	r0
 246:	0f 90       	pop	r0
 248:	0f 90       	pop	r0
 24a:	0f 90       	pop	r0
 24c:	0f 90       	pop	r0
 24e:	c0 5c       	subi	r28, 0xC0	; 192
 250:	df 4f       	sbci	r29, 0xFF	; 255
 252:	0f b6       	in	r0, 0x3f	; 63
 254:	f8 94       	cli
 256:	de bf       	out	0x3e, r29	; 62
 258:	0f be       	out	0x3f, r0	; 63
 25a:	cd bf       	out	0x3d, r28	; 61
 25c:	df 91       	pop	r29
 25e:	cf 91       	pop	r28
 260:	1f 91       	pop	r17
 262:	0f 91       	pop	r16
 264:	08 95       	ret

00000266 <main>:

#define FOSC 16000000 // Clock Speed
#define BAUD 9600
#define MYUBRR FOSC/16/BAUD - 1

int main(void) {
 266:	cf 93       	push	r28
 268:	df 93       	push	r29
 26a:	cd b7       	in	r28, 0x3d	; 61
 26c:	de b7       	in	r29, 0x3e	; 62
 26e:	ad 97       	sbiw	r28, 0x2d	; 45
 270:	0f b6       	in	r0, 0x3f	; 63
 272:	f8 94       	cli
 274:	de bf       	out	0x3e, r29	; 62
 276:	0f be       	out	0x3f, r0	; 63
 278:	cd bf       	out	0x3d, r28	; 61
	uint8_t address[5] = { 0x01, 0x01, 0x01, 0x01, 0x01 };
 27a:	85 e0       	ldi	r24, 0x05	; 5
 27c:	e8 e0       	ldi	r30, 0x08	; 8
 27e:	f2 e0       	ldi	r31, 0x02	; 2
 280:	de 01       	movw	r26, r28
 282:	11 96       	adiw	r26, 0x01	; 1
 284:	01 90       	ld	r0, Z+
 286:	0d 92       	st	X+, r0
 288:	8a 95       	dec	r24
 28a:	e1 f7       	brne	.-8      	; 0x284 <main+0x1e>

	usart_init();
 28c:	80 df       	rcall	.-256    	; 0x18e <usart_init>
	
	nRF24L01 *rf = setup_rf();
 28e:	4a df       	rcall	.-364    	; 0x124 <setup_rf>
 290:	8c 01       	movw	r16, r24
 292:	78 94       	sei
	sei();
 294:	ae 01       	movw	r20, r28
	nRF24L01_listen(rf, 0, address);
 296:	4f 5f       	subi	r20, 0xFF	; 255
 298:	5f 4f       	sbci	r21, 0xFF	; 255
 29a:	60 e0       	ldi	r22, 0x00	; 0
 29c:	70 e0       	ldi	r23, 0x00	; 0
 29e:	81 d0       	rcall	.+258    	; 0x3a2 <nRF24L01_listen>
 2a0:	21 e0       	ldi	r18, 0x01	; 1
	uint8_t addr[5];
	nRF24L01_read_register(rf, CONFIG, addr, 1);
 2a2:	30 e0       	ldi	r19, 0x00	; 0
 2a4:	ae 01       	movw	r20, r28
 2a6:	4a 5f       	subi	r20, 0xFA	; 250
 2a8:	5f 4f       	sbci	r21, 0xFF	; 255
 2aa:	60 e0       	ldi	r22, 0x00	; 0
 2ac:	c8 01       	movw	r24, r16
 2ae:	6e d0       	rcall	.+220    	; 0x38c <nRF24L01_read_register>
 2b0:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <__data_end>

	while (true) {
		if (rf_interrupt) {
 2b4:	88 23       	and	r24, r24
 2b6:	e1 f3       	breq	.-8      	; 0x2b0 <main+0x4a>
 2b8:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <__data_end>
			rf_interrupt = false;
 2bc:	08 c0       	rjmp	.+16     	; 0x2ce <main+0x68>
//USARTSendStr("INT0\n");
			while (nRF24L01_data_received(rf)) {
 2be:	be 01       	movw	r22, r28
				nRF24L01Message msg;
				nRF24L01_read_received_data(rf, &msg);
 2c0:	65 5f       	subi	r22, 0xF5	; 245
 2c2:	7f 4f       	sbci	r23, 0xFF	; 255
 2c4:	c8 01       	movw	r24, r16
 2c6:	f0 d1       	rcall	.+992    	; 0x6a8 <nRF24L01_read_received_data>
				/* Write to UART RX for display on a RS232 terminal */
				process_message((char *)msg.data);
 2c8:	ce 01       	movw	r24, r28
 2ca:	0d 96       	adiw	r24, 0x0d	; 13
 2cc:	9d df       	rcall	.-198    	; 0x208 <process_message>
 2ce:	c8 01       	movw	r24, r16

	while (true) {
		if (rf_interrupt) {
			rf_interrupt = false;
//USARTSendStr("INT0\n");
			while (nRF24L01_data_received(rf)) {
 2d0:	ca d0       	rcall	.+404    	; 0x466 <nRF24L01_data_received>
 2d2:	81 11       	cpse	r24, r1
 2d4:	f4 cf       	rjmp	.-24     	; 0x2be <main+0x58>
 2d6:	ae 01       	movw	r20, r28
				nRF24L01Message msg;
				nRF24L01_read_received_data(rf, &msg);
				/* Write to UART RX for display on a RS232 terminal */
				process_message((char *)msg.data);
			}
			nRF24L01_listen(rf, 0, address);
 2d8:	4f 5f       	subi	r20, 0xFF	; 255
 2da:	5f 4f       	sbci	r21, 0xFF	; 255
 2dc:	60 e0       	ldi	r22, 0x00	; 0
 2de:	70 e0       	ldi	r23, 0x00	; 0
 2e0:	c8 01       	movw	r24, r16
 2e2:	5f d0       	rcall	.+190    	; 0x3a2 <nRF24L01_listen>
 2e4:	e5 cf       	rjmp	.-54     	; 0x2b0 <main+0x4a>

000002e6 <copy_address>:
 2e6:	fc 01       	movw	r30, r24
 2e8:	a6 2f       	mov	r26, r22
    uint8_t config;
    nRF24L01_read_register(rf, CONFIG, &config, 1);
    config |= (1<<PRIM_RX);
    nRF24L01_write_register(rf, CONFIG, &config, 1);
    return success;
}
 2ea:	b7 2f       	mov	r27, r23
 2ec:	9c 01       	movw	r18, r24
 2ee:	2b 5f       	subi	r18, 0xFB	; 251
 2f0:	3f 4f       	sbci	r19, 0xFF	; 255
 2f2:	91 91       	ld	r25, Z+
 2f4:	9d 93       	st	X+, r25
 2f6:	e2 17       	cp	r30, r18
 2f8:	f3 07       	cpc	r31, r19
 2fa:	d9 f7       	brne	.-10     	; 0x2f2 <copy_address+0xc>
 2fc:	08 95       	ret

000002fe <nRF24L01_init>:
 2fe:	80 e1       	ldi	r24, 0x10	; 16
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	fe d1       	rcall	.+1020   	; 0x700 <malloc>
 304:	20 e1       	ldi	r18, 0x10	; 16
 306:	fc 01       	movw	r30, r24
 308:	11 92       	st	Z+, r1
 30a:	2a 95       	dec	r18
 30c:	e9 f7       	brne	.-6      	; 0x308 <nRF24L01_init+0xa>
 30e:	08 95       	ret

00000310 <nRF24L01_send_command>:
 310:	cf 93       	push	r28
 312:	df 93       	push	r29
 314:	ec 01       	movw	r28, r24
 316:	da 01       	movw	r26, r20
 318:	e8 81       	ld	r30, Y
 31a:	f9 81       	ldd	r31, Y+1	; 0x01
 31c:	50 81       	ld	r21, Z
 31e:	81 e0       	ldi	r24, 0x01	; 1
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	0a 80       	ldd	r0, Y+2	; 0x02
 324:	02 c0       	rjmp	.+4      	; 0x32a <nRF24L01_send_command+0x1a>
 326:	88 0f       	add	r24, r24
 328:	99 1f       	adc	r25, r25
 32a:	0a 94       	dec	r0
 32c:	e2 f7       	brpl	.-8      	; 0x326 <nRF24L01_send_command+0x16>
 32e:	80 95       	com	r24
 330:	85 23       	and	r24, r21
 332:	80 83       	st	Z, r24
 334:	6e bd       	out	0x2e, r22	; 46
 336:	0d b4       	in	r0, 0x2d	; 45
 338:	07 fe       	sbrs	r0, 7
 33a:	fd cf       	rjmp	.-6      	; 0x336 <nRF24L01_send_command+0x26>
 33c:	8e b5       	in	r24, 0x2e	; 46
 33e:	8f 87       	std	Y+15, r24	; 0x0f
 340:	21 15       	cp	r18, r1
 342:	31 05       	cpc	r19, r1
 344:	79 f0       	breq	.+30     	; 0x364 <nRF24L01_send_command+0x54>
 346:	fd 01       	movw	r30, r26
 348:	2a 0f       	add	r18, r26
 34a:	3b 1f       	adc	r19, r27
 34c:	df 01       	movw	r26, r30
 34e:	90 81       	ld	r25, Z
 350:	9e bd       	out	0x2e, r25	; 46
 352:	0d b4       	in	r0, 0x2d	; 45
 354:	07 fe       	sbrs	r0, 7
 356:	fd cf       	rjmp	.-6      	; 0x352 <nRF24L01_send_command+0x42>
 358:	9e b5       	in	r25, 0x2e	; 46
 35a:	9c 93       	st	X, r25
 35c:	31 96       	adiw	r30, 0x01	; 1
 35e:	e2 17       	cp	r30, r18
 360:	f3 07       	cpc	r31, r19
 362:	a1 f7       	brne	.-24     	; 0x34c <nRF24L01_send_command+0x3c>
 364:	e8 81       	ld	r30, Y
 366:	f9 81       	ldd	r31, Y+1	; 0x01
 368:	20 81       	ld	r18, Z
 36a:	81 e0       	ldi	r24, 0x01	; 1
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	0a 80       	ldd	r0, Y+2	; 0x02
 370:	02 c0       	rjmp	.+4      	; 0x376 <nRF24L01_send_command+0x66>
 372:	88 0f       	add	r24, r24
 374:	99 1f       	adc	r25, r25
 376:	0a 94       	dec	r0
 378:	e2 f7       	brpl	.-8      	; 0x372 <nRF24L01_send_command+0x62>
 37a:	82 2b       	or	r24, r18
 37c:	80 83       	st	Z, r24
 37e:	8f 85       	ldd	r24, Y+15	; 0x0f
 380:	df 91       	pop	r29
 382:	cf 91       	pop	r28
 384:	08 95       	ret

00000386 <nRF24L01_write_register>:
 386:	60 62       	ori	r22, 0x20	; 32
 388:	c3 cf       	rjmp	.-122    	; 0x310 <nRF24L01_send_command>
 38a:	08 95       	ret

0000038c <nRF24L01_read_register>:
 38c:	c1 cf       	rjmp	.-126    	; 0x310 <nRF24L01_send_command>
 38e:	08 95       	ret

00000390 <nRF24L01_no_op>:
 390:	20 e0       	ldi	r18, 0x00	; 0
 392:	30 e0       	ldi	r19, 0x00	; 0
 394:	40 e0       	ldi	r20, 0x00	; 0
 396:	50 e0       	ldi	r21, 0x00	; 0
 398:	6f ef       	ldi	r22, 0xFF	; 255
 39a:	ba cf       	rjmp	.-140    	; 0x310 <nRF24L01_send_command>
 39c:	08 95       	ret

0000039e <nRF24L01_update_status>:
 39e:	f8 cf       	rjmp	.-16     	; 0x390 <nRF24L01_no_op>
 3a0:	08 95       	ret

000003a2 <nRF24L01_listen>:
 3a2:	df 92       	push	r13
 3a4:	ef 92       	push	r14
 3a6:	ff 92       	push	r15
 3a8:	0f 93       	push	r16
 3aa:	1f 93       	push	r17
 3ac:	cf 93       	push	r28
 3ae:	df 93       	push	r29
 3b0:	00 d0       	rcall	.+0      	; 0x3b2 <nRF24L01_listen+0x10>
 3b2:	00 d0       	rcall	.+0      	; 0x3b4 <nRF24L01_listen+0x12>
 3b4:	cd b7       	in	r28, 0x3d	; 61
 3b6:	de b7       	in	r29, 0x3e	; 62
 3b8:	7c 01       	movw	r14, r24
 3ba:	d6 2e       	mov	r13, r22
 3bc:	ca 01       	movw	r24, r20
 3be:	be 01       	movw	r22, r28
 3c0:	6f 5f       	subi	r22, 0xFF	; 255
 3c2:	7f 4f       	sbci	r23, 0xFF	; 255
 3c4:	90 df       	rcall	.-224    	; 0x2e6 <copy_address>
 3c6:	6a e0       	ldi	r22, 0x0A	; 10
 3c8:	6d 0d       	add	r22, r13
 3ca:	25 e0       	ldi	r18, 0x05	; 5
 3cc:	30 e0       	ldi	r19, 0x00	; 0
 3ce:	ae 01       	movw	r20, r28
 3d0:	4f 5f       	subi	r20, 0xFF	; 255
 3d2:	5f 4f       	sbci	r21, 0xFF	; 255
 3d4:	c7 01       	movw	r24, r14
 3d6:	d7 df       	rcall	.-82     	; 0x386 <nRF24L01_write_register>
 3d8:	21 e0       	ldi	r18, 0x01	; 1
 3da:	30 e0       	ldi	r19, 0x00	; 0
 3dc:	ae 01       	movw	r20, r28
 3de:	4a 5f       	subi	r20, 0xFA	; 250
 3e0:	5f 4f       	sbci	r21, 0xFF	; 255
 3e2:	62 e0       	ldi	r22, 0x02	; 2
 3e4:	c7 01       	movw	r24, r14
 3e6:	d2 df       	rcall	.-92     	; 0x38c <nRF24L01_read_register>
 3e8:	01 e0       	ldi	r16, 0x01	; 1
 3ea:	10 e0       	ldi	r17, 0x00	; 0
 3ec:	c8 01       	movw	r24, r16
 3ee:	02 c0       	rjmp	.+4      	; 0x3f4 <nRF24L01_listen+0x52>
 3f0:	88 0f       	add	r24, r24
 3f2:	99 1f       	adc	r25, r25
 3f4:	da 94       	dec	r13
 3f6:	e2 f7       	brpl	.-8      	; 0x3f0 <nRF24L01_listen+0x4e>
 3f8:	9e 81       	ldd	r25, Y+6	; 0x06
 3fa:	89 2b       	or	r24, r25
 3fc:	8e 83       	std	Y+6, r24	; 0x06
 3fe:	21 e0       	ldi	r18, 0x01	; 1
 400:	30 e0       	ldi	r19, 0x00	; 0
 402:	ae 01       	movw	r20, r28
 404:	4a 5f       	subi	r20, 0xFA	; 250
 406:	5f 4f       	sbci	r21, 0xFF	; 255
 408:	62 e0       	ldi	r22, 0x02	; 2
 40a:	c7 01       	movw	r24, r14
 40c:	bc df       	rcall	.-136    	; 0x386 <nRF24L01_write_register>
 40e:	d7 01       	movw	r26, r14
 410:	13 96       	adiw	r26, 0x03	; 3
 412:	ed 91       	ld	r30, X+
 414:	fc 91       	ld	r31, X
 416:	14 97       	sbiw	r26, 0x04	; 4
 418:	80 81       	ld	r24, Z
 41a:	15 96       	adiw	r26, 0x05	; 5
 41c:	0c 90       	ld	r0, X
 41e:	02 c0       	rjmp	.+4      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 420:	00 0f       	add	r16, r16
 422:	11 1f       	adc	r17, r17
 424:	0a 94       	dec	r0
 426:	e2 f7       	brpl	.-8      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 428:	08 2b       	or	r16, r24
 42a:	00 83       	st	Z, r16
 42c:	26 96       	adiw	r28, 0x06	; 6
 42e:	0f b6       	in	r0, 0x3f	; 63
 430:	f8 94       	cli
 432:	de bf       	out	0x3e, r29	; 62
 434:	0f be       	out	0x3f, r0	; 63
 436:	cd bf       	out	0x3d, r28	; 61
 438:	df 91       	pop	r29
 43a:	cf 91       	pop	r28
 43c:	1f 91       	pop	r17
 43e:	0f 91       	pop	r16
 440:	ff 90       	pop	r15
 442:	ef 90       	pop	r14
 444:	df 90       	pop	r13
 446:	08 95       	ret

00000448 <nRF24L01_pipe_number_received>:
 448:	fc 01       	movw	r30, r24
 44a:	27 85       	ldd	r18, Z+15	; 0x0f
 44c:	2e 70       	andi	r18, 0x0E	; 14
 44e:	30 e0       	ldi	r19, 0x00	; 0
 450:	35 95       	asr	r19
 452:	27 95       	ror	r18
 454:	26 30       	cpi	r18, 0x06	; 6
 456:	31 05       	cpc	r19, r1
 458:	1c f4       	brge	.+6      	; 0x460 <nRF24L01_pipe_number_received+0x18>
 45a:	82 2f       	mov	r24, r18
 45c:	93 2f       	mov	r25, r19
 45e:	08 95       	ret
 460:	8f ef       	ldi	r24, 0xFF	; 255
 462:	9f ef       	ldi	r25, 0xFF	; 255
 464:	08 95       	ret

00000466 <nRF24L01_data_received>:
 466:	cf 93       	push	r28
 468:	df 93       	push	r29
 46a:	ec 01       	movw	r28, r24
 46c:	eb 81       	ldd	r30, Y+3	; 0x03
 46e:	fc 81       	ldd	r31, Y+4	; 0x04
 470:	20 81       	ld	r18, Z
 472:	81 e0       	ldi	r24, 0x01	; 1
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	0d 80       	ldd	r0, Y+5	; 0x05
 478:	02 c0       	rjmp	.+4      	; 0x47e <nRF24L01_data_received+0x18>
 47a:	88 0f       	add	r24, r24
 47c:	99 1f       	adc	r25, r25
 47e:	0a 94       	dec	r0
 480:	e2 f7       	brpl	.-8      	; 0x47a <nRF24L01_data_received+0x14>
 482:	80 95       	com	r24
 484:	82 23       	and	r24, r18
 486:	80 83       	st	Z, r24
 488:	ce 01       	movw	r24, r28
 48a:	89 df       	rcall	.-238    	; 0x39e <nRF24L01_update_status>
 48c:	ce 01       	movw	r24, r28
 48e:	dc df       	rcall	.-72     	; 0x448 <nRF24L01_pipe_number_received>
 490:	89 2f       	mov	r24, r25
 492:	80 95       	com	r24
 494:	88 1f       	adc	r24, r24
 496:	88 27       	eor	r24, r24
 498:	88 1f       	adc	r24, r24
 49a:	df 91       	pop	r29
 49c:	cf 91       	pop	r28
 49e:	08 95       	ret

000004a0 <nRF24L01_clear_interrupts>:
 4a0:	cf 93       	push	r28
 4a2:	df 93       	push	r29
 4a4:	1f 92       	push	r1
 4a6:	cd b7       	in	r28, 0x3d	; 61
 4a8:	de b7       	in	r29, 0x3e	; 62
 4aa:	20 e7       	ldi	r18, 0x70	; 112
 4ac:	29 83       	std	Y+1, r18	; 0x01
 4ae:	21 e0       	ldi	r18, 0x01	; 1
 4b0:	30 e0       	ldi	r19, 0x00	; 0
 4b2:	ae 01       	movw	r20, r28
 4b4:	4f 5f       	subi	r20, 0xFF	; 255
 4b6:	5f 4f       	sbci	r21, 0xFF	; 255
 4b8:	67 e0       	ldi	r22, 0x07	; 7
 4ba:	65 df       	rcall	.-310    	; 0x386 <nRF24L01_write_register>
 4bc:	0f 90       	pop	r0
 4be:	df 91       	pop	r29
 4c0:	cf 91       	pop	r28
 4c2:	08 95       	ret

000004c4 <nRF24L01_begin>:
 4c4:	ff 92       	push	r15
 4c6:	0f 93       	push	r16
 4c8:	1f 93       	push	r17
 4ca:	cf 93       	push	r28
 4cc:	df 93       	push	r29
 4ce:	1f 92       	push	r1
 4d0:	cd b7       	in	r28, 0x3d	; 61
 4d2:	de b7       	in	r29, 0x3e	; 62
 4d4:	8c 01       	movw	r16, r24
 4d6:	dc 01       	movw	r26, r24
 4d8:	ed 91       	ld	r30, X+
 4da:	fc 91       	ld	r31, X
 4dc:	11 97       	sbiw	r26, 0x01	; 1
 4de:	42 91       	ld	r20, -Z
 4e0:	81 e0       	ldi	r24, 0x01	; 1
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	9c 01       	movw	r18, r24
 4e6:	12 96       	adiw	r26, 0x02	; 2
 4e8:	0c 90       	ld	r0, X
 4ea:	12 97       	sbiw	r26, 0x02	; 2
 4ec:	02 c0       	rjmp	.+4      	; 0x4f2 <nRF24L01_begin+0x2e>
 4ee:	22 0f       	add	r18, r18
 4f0:	33 1f       	adc	r19, r19
 4f2:	0a 94       	dec	r0
 4f4:	e2 f7       	brpl	.-8      	; 0x4ee <nRF24L01_begin+0x2a>
 4f6:	24 2b       	or	r18, r20
 4f8:	20 83       	st	Z, r18
 4fa:	13 96       	adiw	r26, 0x03	; 3
 4fc:	ed 91       	ld	r30, X+
 4fe:	fc 91       	ld	r31, X
 500:	14 97       	sbiw	r26, 0x04	; 4
 502:	42 91       	ld	r20, -Z
 504:	9c 01       	movw	r18, r24
 506:	15 96       	adiw	r26, 0x05	; 5
 508:	0c 90       	ld	r0, X
 50a:	15 97       	sbiw	r26, 0x05	; 5
 50c:	02 c0       	rjmp	.+4      	; 0x512 <nRF24L01_begin+0x4e>
 50e:	22 0f       	add	r18, r18
 510:	33 1f       	adc	r19, r19
 512:	0a 94       	dec	r0
 514:	e2 f7       	brpl	.-8      	; 0x50e <nRF24L01_begin+0x4a>
 516:	24 2b       	or	r18, r20
 518:	20 83       	st	Z, r18
 51a:	ed 91       	ld	r30, X+
 51c:	fc 91       	ld	r31, X
 51e:	11 97       	sbiw	r26, 0x01	; 1
 520:	40 81       	ld	r20, Z
 522:	9c 01       	movw	r18, r24
 524:	12 96       	adiw	r26, 0x02	; 2
 526:	0c 90       	ld	r0, X
 528:	12 97       	sbiw	r26, 0x02	; 2
 52a:	02 c0       	rjmp	.+4      	; 0x530 <nRF24L01_begin+0x6c>
 52c:	22 0f       	add	r18, r18
 52e:	33 1f       	adc	r19, r19
 530:	0a 94       	dec	r0
 532:	e2 f7       	brpl	.-8      	; 0x52c <nRF24L01_begin+0x68>
 534:	24 2b       	or	r18, r20
 536:	20 83       	st	Z, r18
 538:	13 96       	adiw	r26, 0x03	; 3
 53a:	ed 91       	ld	r30, X+
 53c:	fc 91       	ld	r31, X
 53e:	14 97       	sbiw	r26, 0x04	; 4
 540:	30 81       	ld	r19, Z
 542:	ac 01       	movw	r20, r24
 544:	15 96       	adiw	r26, 0x05	; 5
 546:	0c 90       	ld	r0, X
 548:	15 97       	sbiw	r26, 0x05	; 5
 54a:	02 c0       	rjmp	.+4      	; 0x550 <nRF24L01_begin+0x8c>
 54c:	44 0f       	add	r20, r20
 54e:	55 1f       	adc	r21, r21
 550:	0a 94       	dec	r0
 552:	e2 f7       	brpl	.-8      	; 0x54c <nRF24L01_begin+0x88>
 554:	24 2f       	mov	r18, r20
 556:	20 95       	com	r18
 558:	23 23       	and	r18, r19
 55a:	20 83       	st	Z, r18
 55c:	2c b5       	in	r18, 0x2c	; 44
 55e:	20 61       	ori	r18, 0x10	; 16
 560:	2c bd       	out	0x2c, r18	; 44
 562:	2c b5       	in	r18, 0x2c	; 44
 564:	20 64       	ori	r18, 0x40	; 64
 566:	2c bd       	out	0x2c, r18	; 44
 568:	16 96       	adiw	r26, 0x06	; 6
 56a:	ed 91       	ld	r30, X+
 56c:	fc 91       	ld	r31, X
 56e:	17 97       	sbiw	r26, 0x07	; 7
 570:	42 91       	ld	r20, -Z
 572:	9c 01       	movw	r18, r24
 574:	18 96       	adiw	r26, 0x08	; 8
 576:	0c 90       	ld	r0, X
 578:	18 97       	sbiw	r26, 0x08	; 8
 57a:	02 c0       	rjmp	.+4      	; 0x580 <nRF24L01_begin+0xbc>
 57c:	22 0f       	add	r18, r18
 57e:	33 1f       	adc	r19, r19
 580:	0a 94       	dec	r0
 582:	e2 f7       	brpl	.-8      	; 0x57c <nRF24L01_begin+0xb8>
 584:	24 2b       	or	r18, r20
 586:	20 83       	st	Z, r18
 588:	19 96       	adiw	r26, 0x09	; 9
 58a:	ed 91       	ld	r30, X+
 58c:	fc 91       	ld	r31, X
 58e:	1a 97       	sbiw	r26, 0x0a	; 10
 590:	42 91       	ld	r20, -Z
 592:	9c 01       	movw	r18, r24
 594:	1b 96       	adiw	r26, 0x0b	; 11
 596:	0c 90       	ld	r0, X
 598:	1b 97       	sbiw	r26, 0x0b	; 11
 59a:	02 c0       	rjmp	.+4      	; 0x5a0 <nRF24L01_begin+0xdc>
 59c:	22 0f       	add	r18, r18
 59e:	33 1f       	adc	r19, r19
 5a0:	0a 94       	dec	r0
 5a2:	e2 f7       	brpl	.-8      	; 0x59c <nRF24L01_begin+0xd8>
 5a4:	24 2b       	or	r18, r20
 5a6:	20 83       	st	Z, r18
 5a8:	1c 96       	adiw	r26, 0x0c	; 12
 5aa:	ed 91       	ld	r30, X+
 5ac:	fc 91       	ld	r31, X
 5ae:	1d 97       	sbiw	r26, 0x0d	; 13
 5b0:	22 91       	ld	r18, -Z
 5b2:	1e 96       	adiw	r26, 0x0e	; 14
 5b4:	0c 90       	ld	r0, X
 5b6:	02 c0       	rjmp	.+4      	; 0x5bc <nRF24L01_begin+0xf8>
 5b8:	88 0f       	add	r24, r24
 5ba:	99 1f       	adc	r25, r25
 5bc:	0a 94       	dec	r0
 5be:	e2 f7       	brpl	.-8      	; 0x5b8 <nRF24L01_begin+0xf4>
 5c0:	80 95       	com	r24
 5c2:	82 23       	and	r24, r18
 5c4:	80 83       	st	Z, r24
 5c6:	8c b5       	in	r24, 0x2c	; 44
 5c8:	87 7f       	andi	r24, 0xF7	; 247
 5ca:	8c bd       	out	0x2c, r24	; 44
 5cc:	8c b5       	in	r24, 0x2c	; 44
 5ce:	8b 7f       	andi	r24, 0xFB	; 251
 5d0:	8c bd       	out	0x2c, r24	; 44
 5d2:	8c b5       	in	r24, 0x2c	; 44
 5d4:	8e 7f       	andi	r24, 0xFE	; 254
 5d6:	8c bd       	out	0x2c, r24	; 44
 5d8:	8c b5       	in	r24, 0x2c	; 44
 5da:	8d 7f       	andi	r24, 0xFD	; 253
 5dc:	8c bd       	out	0x2c, r24	; 44
 5de:	8d b5       	in	r24, 0x2d	; 45
 5e0:	81 60       	ori	r24, 0x01	; 1
 5e2:	8d bd       	out	0x2d, r24	; 45
 5e4:	8c b5       	in	r24, 0x2c	; 44
 5e6:	8f 7d       	andi	r24, 0xDF	; 223
 5e8:	8c bd       	out	0x2c, r24	; 44
 5ea:	20 e0       	ldi	r18, 0x00	; 0
 5ec:	30 e0       	ldi	r19, 0x00	; 0
 5ee:	40 e0       	ldi	r20, 0x00	; 0
 5f0:	50 e0       	ldi	r21, 0x00	; 0
 5f2:	62 ee       	ldi	r22, 0xE2	; 226
 5f4:	c8 01       	movw	r24, r16
 5f6:	8c de       	rcall	.-744    	; 0x310 <nRF24L01_send_command>
 5f8:	20 e0       	ldi	r18, 0x00	; 0
 5fa:	30 e0       	ldi	r19, 0x00	; 0
 5fc:	40 e0       	ldi	r20, 0x00	; 0
 5fe:	50 e0       	ldi	r21, 0x00	; 0
 600:	61 ee       	ldi	r22, 0xE1	; 225
 602:	c8 01       	movw	r24, r16
 604:	85 de       	rcall	.-758    	; 0x310 <nRF24L01_send_command>
 606:	c8 01       	movw	r24, r16
 608:	4b df       	rcall	.-362    	; 0x4a0 <nRF24L01_clear_interrupts>
 60a:	8f e0       	ldi	r24, 0x0F	; 15
 60c:	89 83       	std	Y+1, r24	; 0x01
 60e:	21 e0       	ldi	r18, 0x01	; 1
 610:	30 e0       	ldi	r19, 0x00	; 0
 612:	ae 01       	movw	r20, r28
 614:	4f 5f       	subi	r20, 0xFF	; 255
 616:	5f 4f       	sbci	r21, 0xFF	; 255
 618:	60 e0       	ldi	r22, 0x00	; 0
 61a:	c8 01       	movw	r24, r16
 61c:	b4 de       	rcall	.-664    	; 0x386 <nRF24L01_write_register>
 61e:	0f 2e       	mov	r0, r31
 620:	ff e3       	ldi	r31, 0x3F	; 63
 622:	ff 2e       	mov	r15, r31
 624:	f0 2d       	mov	r31, r0
 626:	f9 82       	std	Y+1, r15	; 0x01
 628:	21 e0       	ldi	r18, 0x01	; 1
 62a:	30 e0       	ldi	r19, 0x00	; 0
 62c:	ae 01       	movw	r20, r28
 62e:	4f 5f       	subi	r20, 0xFF	; 255
 630:	5f 4f       	sbci	r21, 0xFF	; 255
 632:	61 e0       	ldi	r22, 0x01	; 1
 634:	c8 01       	movw	r24, r16
 636:	a7 de       	rcall	.-690    	; 0x386 <nRF24L01_write_register>
 638:	f9 82       	std	Y+1, r15	; 0x01
 63a:	21 e0       	ldi	r18, 0x01	; 1
 63c:	30 e0       	ldi	r19, 0x00	; 0
 63e:	ae 01       	movw	r20, r28
 640:	4f 5f       	subi	r20, 0xFF	; 255
 642:	5f 4f       	sbci	r21, 0xFF	; 255
 644:	6c e1       	ldi	r22, 0x1C	; 28
 646:	c8 01       	movw	r24, r16
 648:	9e de       	rcall	.-708    	; 0x386 <nRF24L01_write_register>
 64a:	84 e0       	ldi	r24, 0x04	; 4
 64c:	89 83       	std	Y+1, r24	; 0x01
 64e:	21 e0       	ldi	r18, 0x01	; 1
 650:	30 e0       	ldi	r19, 0x00	; 0
 652:	ae 01       	movw	r20, r28
 654:	4f 5f       	subi	r20, 0xFF	; 255
 656:	5f 4f       	sbci	r21, 0xFF	; 255
 658:	6d e1       	ldi	r22, 0x1D	; 29
 65a:	c8 01       	movw	r24, r16
 65c:	94 de       	rcall	.-728    	; 0x386 <nRF24L01_write_register>
 65e:	19 82       	std	Y+1, r1	; 0x01
 660:	21 e0       	ldi	r18, 0x01	; 1
 662:	30 e0       	ldi	r19, 0x00	; 0
 664:	ae 01       	movw	r20, r28
 666:	4f 5f       	subi	r20, 0xFF	; 255
 668:	5f 4f       	sbci	r21, 0xFF	; 255
 66a:	62 e0       	ldi	r22, 0x02	; 2
 66c:	c8 01       	movw	r24, r16
 66e:	8b de       	rcall	.-746    	; 0x386 <nRF24L01_write_register>
 670:	0f 90       	pop	r0
 672:	df 91       	pop	r29
 674:	cf 91       	pop	r28
 676:	1f 91       	pop	r17
 678:	0f 91       	pop	r16
 67a:	ff 90       	pop	r15
 67c:	08 95       	ret

0000067e <nRF24L01_clear_receive_interrupt>:
void nRF24L01_clear_transmit_interrupts(nRF24L01 *rf) {
    uint8_t data = (1<<TX_DS) | (1<<MAX_RT);
    nRF24L01_write_register(rf, STATUS, &data, 1);
}

void nRF24L01_clear_receive_interrupt(nRF24L01 *rf) {
 67e:	cf 93       	push	r28
 680:	df 93       	push	r29
 682:	1f 92       	push	r1
 684:	cd b7       	in	r28, 0x3d	; 61
 686:	de b7       	in	r29, 0x3e	; 62
 688:	fc 01       	movw	r30, r24
    uint8_t data = (1<<RX_DR) | rf->status;
 68a:	97 85       	ldd	r25, Z+15	; 0x0f
 68c:	90 64       	ori	r25, 0x40	; 64
 68e:	99 83       	std	Y+1, r25	; 0x01
    nRF24L01_write_register(rf, STATUS, &data, 1);
 690:	21 e0       	ldi	r18, 0x01	; 1
 692:	30 e0       	ldi	r19, 0x00	; 0
 694:	ae 01       	movw	r20, r28
 696:	4f 5f       	subi	r20, 0xFF	; 255
 698:	5f 4f       	sbci	r21, 0xFF	; 255
 69a:	67 e0       	ldi	r22, 0x07	; 7
 69c:	cf 01       	movw	r24, r30
 69e:	73 de       	rcall	.-794    	; 0x386 <nRF24L01_write_register>
}
 6a0:	0f 90       	pop	r0
 6a2:	df 91       	pop	r29
 6a4:	cf 91       	pop	r28
 6a6:	08 95       	ret

000006a8 <nRF24L01_read_received_data>:
    nRF24L01_write_register(rf, EN_RXADDR, &current_pipes, 1);

    set_high(rf->ce);
}

bool nRF24L01_read_received_data(nRF24L01 *rf, nRF24L01Message *message) {
 6a8:	0f 93       	push	r16
 6aa:	1f 93       	push	r17
 6ac:	cf 93       	push	r28
 6ae:	df 93       	push	r29
 6b0:	8c 01       	movw	r16, r24
 6b2:	eb 01       	movw	r28, r22
    message->pipe_number = nRF24L01_pipe_number_received(rf);
 6b4:	c9 de       	rcall	.-622    	; 0x448 <nRF24L01_pipe_number_received>
 6b6:	99 83       	std	Y+1, r25	; 0x01
 6b8:	88 83       	st	Y, r24
    nRF24L01_clear_receive_interrupt(rf);
 6ba:	c8 01       	movw	r24, r16
 6bc:	e0 df       	rcall	.-64     	; 0x67e <nRF24L01_clear_receive_interrupt>
    if (message->pipe_number < 0) {
 6be:	88 81       	ld	r24, Y
 6c0:	99 81       	ldd	r25, Y+1	; 0x01
 6c2:	99 23       	and	r25, r25
 6c4:	1c f4       	brge	.+6      	; 0x6cc <nRF24L01_read_received_data+0x24>
        message->length = 0;
 6c6:	1a a2       	std	Y+34, r1	; 0x22
        return false;
 6c8:	80 e0       	ldi	r24, 0x00	; 0
 6ca:	15 c0       	rjmp	.+42     	; 0x6f6 <nRF24L01_read_received_data+0x4e>
    }

    nRF24L01_read_register(rf, R_RX_PL_WID, &message->length, 1);
 6cc:	21 e0       	ldi	r18, 0x01	; 1
 6ce:	30 e0       	ldi	r19, 0x00	; 0
 6d0:	ae 01       	movw	r20, r28
 6d2:	4e 5d       	subi	r20, 0xDE	; 222
 6d4:	5f 4f       	sbci	r21, 0xFF	; 255
 6d6:	60 e6       	ldi	r22, 0x60	; 96
 6d8:	c8 01       	movw	r24, r16
 6da:	58 de       	rcall	.-848    	; 0x38c <nRF24L01_read_register>

    if (message->length > 0) {
 6dc:	2a a1       	ldd	r18, Y+34	; 0x22
 6de:	22 23       	and	r18, r18
 6e0:	49 f0       	breq	.+18     	; 0x6f4 <nRF24L01_read_received_data+0x4c>
        nRF24L01_send_command(rf, R_RX_PAYLOAD, &message->data,
 6e2:	30 e0       	ldi	r19, 0x00	; 0
 6e4:	ae 01       	movw	r20, r28
 6e6:	4e 5f       	subi	r20, 0xFE	; 254
 6e8:	5f 4f       	sbci	r21, 0xFF	; 255
 6ea:	61 e6       	ldi	r22, 0x61	; 97
 6ec:	c8 01       	movw	r24, r16
 6ee:	10 de       	rcall	.-992    	; 0x310 <nRF24L01_send_command>
            message->length);
    }

    return true;
 6f0:	81 e0       	ldi	r24, 0x01	; 1
 6f2:	01 c0       	rjmp	.+2      	; 0x6f6 <nRF24L01_read_received_data+0x4e>
 6f4:	81 e0       	ldi	r24, 0x01	; 1
}
 6f6:	df 91       	pop	r29
 6f8:	cf 91       	pop	r28
 6fa:	1f 91       	pop	r17
 6fc:	0f 91       	pop	r16
 6fe:	08 95       	ret

00000700 <malloc>:
 700:	0f 93       	push	r16
 702:	1f 93       	push	r17
 704:	cf 93       	push	r28
 706:	df 93       	push	r29
 708:	82 30       	cpi	r24, 0x02	; 2
 70a:	91 05       	cpc	r25, r1
 70c:	10 f4       	brcc	.+4      	; 0x712 <malloc+0x12>
 70e:	82 e0       	ldi	r24, 0x02	; 2
 710:	90 e0       	ldi	r25, 0x00	; 0
 712:	e0 91 3b 02 	lds	r30, 0x023B	; 0x80023b <__flp>
 716:	f0 91 3c 02 	lds	r31, 0x023C	; 0x80023c <__flp+0x1>
 71a:	20 e0       	ldi	r18, 0x00	; 0
 71c:	30 e0       	ldi	r19, 0x00	; 0
 71e:	a0 e0       	ldi	r26, 0x00	; 0
 720:	b0 e0       	ldi	r27, 0x00	; 0
 722:	30 97       	sbiw	r30, 0x00	; 0
 724:	19 f1       	breq	.+70     	; 0x76c <malloc+0x6c>
 726:	40 81       	ld	r20, Z
 728:	51 81       	ldd	r21, Z+1	; 0x01
 72a:	02 81       	ldd	r16, Z+2	; 0x02
 72c:	13 81       	ldd	r17, Z+3	; 0x03
 72e:	48 17       	cp	r20, r24
 730:	59 07       	cpc	r21, r25
 732:	c8 f0       	brcs	.+50     	; 0x766 <malloc+0x66>
 734:	84 17       	cp	r24, r20
 736:	95 07       	cpc	r25, r21
 738:	69 f4       	brne	.+26     	; 0x754 <malloc+0x54>
 73a:	10 97       	sbiw	r26, 0x00	; 0
 73c:	31 f0       	breq	.+12     	; 0x74a <malloc+0x4a>
 73e:	12 96       	adiw	r26, 0x02	; 2
 740:	0c 93       	st	X, r16
 742:	12 97       	sbiw	r26, 0x02	; 2
 744:	13 96       	adiw	r26, 0x03	; 3
 746:	1c 93       	st	X, r17
 748:	27 c0       	rjmp	.+78     	; 0x798 <malloc+0x98>
 74a:	00 93 3b 02 	sts	0x023B, r16	; 0x80023b <__flp>
 74e:	10 93 3c 02 	sts	0x023C, r17	; 0x80023c <__flp+0x1>
 752:	22 c0       	rjmp	.+68     	; 0x798 <malloc+0x98>
 754:	21 15       	cp	r18, r1
 756:	31 05       	cpc	r19, r1
 758:	19 f0       	breq	.+6      	; 0x760 <malloc+0x60>
 75a:	42 17       	cp	r20, r18
 75c:	53 07       	cpc	r21, r19
 75e:	18 f4       	brcc	.+6      	; 0x766 <malloc+0x66>
 760:	9a 01       	movw	r18, r20
 762:	bd 01       	movw	r22, r26
 764:	ef 01       	movw	r28, r30
 766:	df 01       	movw	r26, r30
 768:	f8 01       	movw	r30, r16
 76a:	db cf       	rjmp	.-74     	; 0x722 <malloc+0x22>
 76c:	21 15       	cp	r18, r1
 76e:	31 05       	cpc	r19, r1
 770:	f9 f0       	breq	.+62     	; 0x7b0 <malloc+0xb0>
 772:	28 1b       	sub	r18, r24
 774:	39 0b       	sbc	r19, r25
 776:	24 30       	cpi	r18, 0x04	; 4
 778:	31 05       	cpc	r19, r1
 77a:	80 f4       	brcc	.+32     	; 0x79c <malloc+0x9c>
 77c:	8a 81       	ldd	r24, Y+2	; 0x02
 77e:	9b 81       	ldd	r25, Y+3	; 0x03
 780:	61 15       	cp	r22, r1
 782:	71 05       	cpc	r23, r1
 784:	21 f0       	breq	.+8      	; 0x78e <malloc+0x8e>
 786:	fb 01       	movw	r30, r22
 788:	93 83       	std	Z+3, r25	; 0x03
 78a:	82 83       	std	Z+2, r24	; 0x02
 78c:	04 c0       	rjmp	.+8      	; 0x796 <malloc+0x96>
 78e:	90 93 3c 02 	sts	0x023C, r25	; 0x80023c <__flp+0x1>
 792:	80 93 3b 02 	sts	0x023B, r24	; 0x80023b <__flp>
 796:	fe 01       	movw	r30, r28
 798:	32 96       	adiw	r30, 0x02	; 2
 79a:	44 c0       	rjmp	.+136    	; 0x824 <malloc+0x124>
 79c:	fe 01       	movw	r30, r28
 79e:	e2 0f       	add	r30, r18
 7a0:	f3 1f       	adc	r31, r19
 7a2:	81 93       	st	Z+, r24
 7a4:	91 93       	st	Z+, r25
 7a6:	22 50       	subi	r18, 0x02	; 2
 7a8:	31 09       	sbc	r19, r1
 7aa:	39 83       	std	Y+1, r19	; 0x01
 7ac:	28 83       	st	Y, r18
 7ae:	3a c0       	rjmp	.+116    	; 0x824 <malloc+0x124>
 7b0:	20 91 39 02 	lds	r18, 0x0239	; 0x800239 <__brkval>
 7b4:	30 91 3a 02 	lds	r19, 0x023A	; 0x80023a <__brkval+0x1>
 7b8:	23 2b       	or	r18, r19
 7ba:	41 f4       	brne	.+16     	; 0x7cc <malloc+0xcc>
 7bc:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
 7c0:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
 7c4:	30 93 3a 02 	sts	0x023A, r19	; 0x80023a <__brkval+0x1>
 7c8:	20 93 39 02 	sts	0x0239, r18	; 0x800239 <__brkval>
 7cc:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
 7d0:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
 7d4:	21 15       	cp	r18, r1
 7d6:	31 05       	cpc	r19, r1
 7d8:	41 f4       	brne	.+16     	; 0x7ea <malloc+0xea>
 7da:	2d b7       	in	r18, 0x3d	; 61
 7dc:	3e b7       	in	r19, 0x3e	; 62
 7de:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
 7e2:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
 7e6:	24 1b       	sub	r18, r20
 7e8:	35 0b       	sbc	r19, r21
 7ea:	e0 91 39 02 	lds	r30, 0x0239	; 0x800239 <__brkval>
 7ee:	f0 91 3a 02 	lds	r31, 0x023A	; 0x80023a <__brkval+0x1>
 7f2:	e2 17       	cp	r30, r18
 7f4:	f3 07       	cpc	r31, r19
 7f6:	a0 f4       	brcc	.+40     	; 0x820 <malloc+0x120>
 7f8:	2e 1b       	sub	r18, r30
 7fa:	3f 0b       	sbc	r19, r31
 7fc:	28 17       	cp	r18, r24
 7fe:	39 07       	cpc	r19, r25
 800:	78 f0       	brcs	.+30     	; 0x820 <malloc+0x120>
 802:	ac 01       	movw	r20, r24
 804:	4e 5f       	subi	r20, 0xFE	; 254
 806:	5f 4f       	sbci	r21, 0xFF	; 255
 808:	24 17       	cp	r18, r20
 80a:	35 07       	cpc	r19, r21
 80c:	48 f0       	brcs	.+18     	; 0x820 <malloc+0x120>
 80e:	4e 0f       	add	r20, r30
 810:	5f 1f       	adc	r21, r31
 812:	50 93 3a 02 	sts	0x023A, r21	; 0x80023a <__brkval+0x1>
 816:	40 93 39 02 	sts	0x0239, r20	; 0x800239 <__brkval>
 81a:	81 93       	st	Z+, r24
 81c:	91 93       	st	Z+, r25
 81e:	02 c0       	rjmp	.+4      	; 0x824 <malloc+0x124>
 820:	e0 e0       	ldi	r30, 0x00	; 0
 822:	f0 e0       	ldi	r31, 0x00	; 0
 824:	cf 01       	movw	r24, r30
 826:	df 91       	pop	r29
 828:	cf 91       	pop	r28
 82a:	1f 91       	pop	r17
 82c:	0f 91       	pop	r16
 82e:	08 95       	ret

00000830 <free>:
 830:	cf 93       	push	r28
 832:	df 93       	push	r29
 834:	00 97       	sbiw	r24, 0x00	; 0
 836:	09 f4       	brne	.+2      	; 0x83a <free+0xa>
 838:	81 c0       	rjmp	.+258    	; 0x93c <free+0x10c>
 83a:	fc 01       	movw	r30, r24
 83c:	32 97       	sbiw	r30, 0x02	; 2
 83e:	13 82       	std	Z+3, r1	; 0x03
 840:	12 82       	std	Z+2, r1	; 0x02
 842:	a0 91 3b 02 	lds	r26, 0x023B	; 0x80023b <__flp>
 846:	b0 91 3c 02 	lds	r27, 0x023C	; 0x80023c <__flp+0x1>
 84a:	10 97       	sbiw	r26, 0x00	; 0
 84c:	81 f4       	brne	.+32     	; 0x86e <free+0x3e>
 84e:	20 81       	ld	r18, Z
 850:	31 81       	ldd	r19, Z+1	; 0x01
 852:	82 0f       	add	r24, r18
 854:	93 1f       	adc	r25, r19
 856:	20 91 39 02 	lds	r18, 0x0239	; 0x800239 <__brkval>
 85a:	30 91 3a 02 	lds	r19, 0x023A	; 0x80023a <__brkval+0x1>
 85e:	28 17       	cp	r18, r24
 860:	39 07       	cpc	r19, r25
 862:	51 f5       	brne	.+84     	; 0x8b8 <free+0x88>
 864:	f0 93 3a 02 	sts	0x023A, r31	; 0x80023a <__brkval+0x1>
 868:	e0 93 39 02 	sts	0x0239, r30	; 0x800239 <__brkval>
 86c:	67 c0       	rjmp	.+206    	; 0x93c <free+0x10c>
 86e:	ed 01       	movw	r28, r26
 870:	20 e0       	ldi	r18, 0x00	; 0
 872:	30 e0       	ldi	r19, 0x00	; 0
 874:	ce 17       	cp	r28, r30
 876:	df 07       	cpc	r29, r31
 878:	40 f4       	brcc	.+16     	; 0x88a <free+0x5a>
 87a:	4a 81       	ldd	r20, Y+2	; 0x02
 87c:	5b 81       	ldd	r21, Y+3	; 0x03
 87e:	9e 01       	movw	r18, r28
 880:	41 15       	cp	r20, r1
 882:	51 05       	cpc	r21, r1
 884:	f1 f0       	breq	.+60     	; 0x8c2 <free+0x92>
 886:	ea 01       	movw	r28, r20
 888:	f5 cf       	rjmp	.-22     	; 0x874 <free+0x44>
 88a:	d3 83       	std	Z+3, r29	; 0x03
 88c:	c2 83       	std	Z+2, r28	; 0x02
 88e:	40 81       	ld	r20, Z
 890:	51 81       	ldd	r21, Z+1	; 0x01
 892:	84 0f       	add	r24, r20
 894:	95 1f       	adc	r25, r21
 896:	c8 17       	cp	r28, r24
 898:	d9 07       	cpc	r29, r25
 89a:	59 f4       	brne	.+22     	; 0x8b2 <free+0x82>
 89c:	88 81       	ld	r24, Y
 89e:	99 81       	ldd	r25, Y+1	; 0x01
 8a0:	84 0f       	add	r24, r20
 8a2:	95 1f       	adc	r25, r21
 8a4:	02 96       	adiw	r24, 0x02	; 2
 8a6:	91 83       	std	Z+1, r25	; 0x01
 8a8:	80 83       	st	Z, r24
 8aa:	8a 81       	ldd	r24, Y+2	; 0x02
 8ac:	9b 81       	ldd	r25, Y+3	; 0x03
 8ae:	93 83       	std	Z+3, r25	; 0x03
 8b0:	82 83       	std	Z+2, r24	; 0x02
 8b2:	21 15       	cp	r18, r1
 8b4:	31 05       	cpc	r19, r1
 8b6:	29 f4       	brne	.+10     	; 0x8c2 <free+0x92>
 8b8:	f0 93 3c 02 	sts	0x023C, r31	; 0x80023c <__flp+0x1>
 8bc:	e0 93 3b 02 	sts	0x023B, r30	; 0x80023b <__flp>
 8c0:	3d c0       	rjmp	.+122    	; 0x93c <free+0x10c>
 8c2:	e9 01       	movw	r28, r18
 8c4:	fb 83       	std	Y+3, r31	; 0x03
 8c6:	ea 83       	std	Y+2, r30	; 0x02
 8c8:	49 91       	ld	r20, Y+
 8ca:	59 91       	ld	r21, Y+
 8cc:	c4 0f       	add	r28, r20
 8ce:	d5 1f       	adc	r29, r21
 8d0:	ec 17       	cp	r30, r28
 8d2:	fd 07       	cpc	r31, r29
 8d4:	61 f4       	brne	.+24     	; 0x8ee <free+0xbe>
 8d6:	80 81       	ld	r24, Z
 8d8:	91 81       	ldd	r25, Z+1	; 0x01
 8da:	84 0f       	add	r24, r20
 8dc:	95 1f       	adc	r25, r21
 8de:	02 96       	adiw	r24, 0x02	; 2
 8e0:	e9 01       	movw	r28, r18
 8e2:	99 83       	std	Y+1, r25	; 0x01
 8e4:	88 83       	st	Y, r24
 8e6:	82 81       	ldd	r24, Z+2	; 0x02
 8e8:	93 81       	ldd	r25, Z+3	; 0x03
 8ea:	9b 83       	std	Y+3, r25	; 0x03
 8ec:	8a 83       	std	Y+2, r24	; 0x02
 8ee:	e0 e0       	ldi	r30, 0x00	; 0
 8f0:	f0 e0       	ldi	r31, 0x00	; 0
 8f2:	12 96       	adiw	r26, 0x02	; 2
 8f4:	8d 91       	ld	r24, X+
 8f6:	9c 91       	ld	r25, X
 8f8:	13 97       	sbiw	r26, 0x03	; 3
 8fa:	00 97       	sbiw	r24, 0x00	; 0
 8fc:	19 f0       	breq	.+6      	; 0x904 <free+0xd4>
 8fe:	fd 01       	movw	r30, r26
 900:	dc 01       	movw	r26, r24
 902:	f7 cf       	rjmp	.-18     	; 0x8f2 <free+0xc2>
 904:	8d 91       	ld	r24, X+
 906:	9c 91       	ld	r25, X
 908:	11 97       	sbiw	r26, 0x01	; 1
 90a:	9d 01       	movw	r18, r26
 90c:	2e 5f       	subi	r18, 0xFE	; 254
 90e:	3f 4f       	sbci	r19, 0xFF	; 255
 910:	82 0f       	add	r24, r18
 912:	93 1f       	adc	r25, r19
 914:	20 91 39 02 	lds	r18, 0x0239	; 0x800239 <__brkval>
 918:	30 91 3a 02 	lds	r19, 0x023A	; 0x80023a <__brkval+0x1>
 91c:	28 17       	cp	r18, r24
 91e:	39 07       	cpc	r19, r25
 920:	69 f4       	brne	.+26     	; 0x93c <free+0x10c>
 922:	30 97       	sbiw	r30, 0x00	; 0
 924:	29 f4       	brne	.+10     	; 0x930 <free+0x100>
 926:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <__flp+0x1>
 92a:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <__flp>
 92e:	02 c0       	rjmp	.+4      	; 0x934 <free+0x104>
 930:	13 82       	std	Z+3, r1	; 0x03
 932:	12 82       	std	Z+2, r1	; 0x02
 934:	b0 93 3a 02 	sts	0x023A, r27	; 0x80023a <__brkval+0x1>
 938:	a0 93 39 02 	sts	0x0239, r26	; 0x800239 <__brkval>
 93c:	df 91       	pop	r29
 93e:	cf 91       	pop	r28
 940:	08 95       	ret

00000942 <sprintf>:
 942:	0f 93       	push	r16
 944:	1f 93       	push	r17
 946:	cf 93       	push	r28
 948:	df 93       	push	r29
 94a:	cd b7       	in	r28, 0x3d	; 61
 94c:	de b7       	in	r29, 0x3e	; 62
 94e:	2e 97       	sbiw	r28, 0x0e	; 14
 950:	0f b6       	in	r0, 0x3f	; 63
 952:	f8 94       	cli
 954:	de bf       	out	0x3e, r29	; 62
 956:	0f be       	out	0x3f, r0	; 63
 958:	cd bf       	out	0x3d, r28	; 61
 95a:	0e 89       	ldd	r16, Y+22	; 0x16
 95c:	1f 89       	ldd	r17, Y+23	; 0x17
 95e:	86 e0       	ldi	r24, 0x06	; 6
 960:	8c 83       	std	Y+4, r24	; 0x04
 962:	1a 83       	std	Y+2, r17	; 0x02
 964:	09 83       	std	Y+1, r16	; 0x01
 966:	8f ef       	ldi	r24, 0xFF	; 255
 968:	9f e7       	ldi	r25, 0x7F	; 127
 96a:	9e 83       	std	Y+6, r25	; 0x06
 96c:	8d 83       	std	Y+5, r24	; 0x05
 96e:	ae 01       	movw	r20, r28
 970:	46 5e       	subi	r20, 0xE6	; 230
 972:	5f 4f       	sbci	r21, 0xFF	; 255
 974:	68 8d       	ldd	r22, Y+24	; 0x18
 976:	79 8d       	ldd	r23, Y+25	; 0x19
 978:	ce 01       	movw	r24, r28
 97a:	01 96       	adiw	r24, 0x01	; 1
 97c:	10 d0       	rcall	.+32     	; 0x99e <vfprintf>
 97e:	ef 81       	ldd	r30, Y+7	; 0x07
 980:	f8 85       	ldd	r31, Y+8	; 0x08
 982:	e0 0f       	add	r30, r16
 984:	f1 1f       	adc	r31, r17
 986:	10 82       	st	Z, r1
 988:	2e 96       	adiw	r28, 0x0e	; 14
 98a:	0f b6       	in	r0, 0x3f	; 63
 98c:	f8 94       	cli
 98e:	de bf       	out	0x3e, r29	; 62
 990:	0f be       	out	0x3f, r0	; 63
 992:	cd bf       	out	0x3d, r28	; 61
 994:	df 91       	pop	r29
 996:	cf 91       	pop	r28
 998:	1f 91       	pop	r17
 99a:	0f 91       	pop	r16
 99c:	08 95       	ret

0000099e <vfprintf>:
 99e:	2f 92       	push	r2
 9a0:	3f 92       	push	r3
 9a2:	4f 92       	push	r4
 9a4:	5f 92       	push	r5
 9a6:	6f 92       	push	r6
 9a8:	7f 92       	push	r7
 9aa:	8f 92       	push	r8
 9ac:	9f 92       	push	r9
 9ae:	af 92       	push	r10
 9b0:	bf 92       	push	r11
 9b2:	cf 92       	push	r12
 9b4:	df 92       	push	r13
 9b6:	ef 92       	push	r14
 9b8:	ff 92       	push	r15
 9ba:	0f 93       	push	r16
 9bc:	1f 93       	push	r17
 9be:	cf 93       	push	r28
 9c0:	df 93       	push	r29
 9c2:	cd b7       	in	r28, 0x3d	; 61
 9c4:	de b7       	in	r29, 0x3e	; 62
 9c6:	2b 97       	sbiw	r28, 0x0b	; 11
 9c8:	0f b6       	in	r0, 0x3f	; 63
 9ca:	f8 94       	cli
 9cc:	de bf       	out	0x3e, r29	; 62
 9ce:	0f be       	out	0x3f, r0	; 63
 9d0:	cd bf       	out	0x3d, r28	; 61
 9d2:	6c 01       	movw	r12, r24
 9d4:	7b 01       	movw	r14, r22
 9d6:	8a 01       	movw	r16, r20
 9d8:	fc 01       	movw	r30, r24
 9da:	17 82       	std	Z+7, r1	; 0x07
 9dc:	16 82       	std	Z+6, r1	; 0x06
 9de:	83 81       	ldd	r24, Z+3	; 0x03
 9e0:	81 ff       	sbrs	r24, 1
 9e2:	bf c1       	rjmp	.+894    	; 0xd62 <vfprintf+0x3c4>
 9e4:	ce 01       	movw	r24, r28
 9e6:	01 96       	adiw	r24, 0x01	; 1
 9e8:	3c 01       	movw	r6, r24
 9ea:	f6 01       	movw	r30, r12
 9ec:	93 81       	ldd	r25, Z+3	; 0x03
 9ee:	f7 01       	movw	r30, r14
 9f0:	93 fd       	sbrc	r25, 3
 9f2:	85 91       	lpm	r24, Z+
 9f4:	93 ff       	sbrs	r25, 3
 9f6:	81 91       	ld	r24, Z+
 9f8:	7f 01       	movw	r14, r30
 9fa:	88 23       	and	r24, r24
 9fc:	09 f4       	brne	.+2      	; 0xa00 <vfprintf+0x62>
 9fe:	ad c1       	rjmp	.+858    	; 0xd5a <vfprintf+0x3bc>
 a00:	85 32       	cpi	r24, 0x25	; 37
 a02:	39 f4       	brne	.+14     	; 0xa12 <vfprintf+0x74>
 a04:	93 fd       	sbrc	r25, 3
 a06:	85 91       	lpm	r24, Z+
 a08:	93 ff       	sbrs	r25, 3
 a0a:	81 91       	ld	r24, Z+
 a0c:	7f 01       	movw	r14, r30
 a0e:	85 32       	cpi	r24, 0x25	; 37
 a10:	21 f4       	brne	.+8      	; 0xa1a <vfprintf+0x7c>
 a12:	b6 01       	movw	r22, r12
 a14:	90 e0       	ldi	r25, 0x00	; 0
 a16:	d6 d1       	rcall	.+940    	; 0xdc4 <fputc>
 a18:	e8 cf       	rjmp	.-48     	; 0x9ea <vfprintf+0x4c>
 a1a:	91 2c       	mov	r9, r1
 a1c:	21 2c       	mov	r2, r1
 a1e:	31 2c       	mov	r3, r1
 a20:	ff e1       	ldi	r31, 0x1F	; 31
 a22:	f3 15       	cp	r31, r3
 a24:	d8 f0       	brcs	.+54     	; 0xa5c <vfprintf+0xbe>
 a26:	8b 32       	cpi	r24, 0x2B	; 43
 a28:	79 f0       	breq	.+30     	; 0xa48 <vfprintf+0xaa>
 a2a:	38 f4       	brcc	.+14     	; 0xa3a <vfprintf+0x9c>
 a2c:	80 32       	cpi	r24, 0x20	; 32
 a2e:	79 f0       	breq	.+30     	; 0xa4e <vfprintf+0xb0>
 a30:	83 32       	cpi	r24, 0x23	; 35
 a32:	a1 f4       	brne	.+40     	; 0xa5c <vfprintf+0xbe>
 a34:	23 2d       	mov	r18, r3
 a36:	20 61       	ori	r18, 0x10	; 16
 a38:	1d c0       	rjmp	.+58     	; 0xa74 <vfprintf+0xd6>
 a3a:	8d 32       	cpi	r24, 0x2D	; 45
 a3c:	61 f0       	breq	.+24     	; 0xa56 <vfprintf+0xb8>
 a3e:	80 33       	cpi	r24, 0x30	; 48
 a40:	69 f4       	brne	.+26     	; 0xa5c <vfprintf+0xbe>
 a42:	23 2d       	mov	r18, r3
 a44:	21 60       	ori	r18, 0x01	; 1
 a46:	16 c0       	rjmp	.+44     	; 0xa74 <vfprintf+0xd6>
 a48:	83 2d       	mov	r24, r3
 a4a:	82 60       	ori	r24, 0x02	; 2
 a4c:	38 2e       	mov	r3, r24
 a4e:	e3 2d       	mov	r30, r3
 a50:	e4 60       	ori	r30, 0x04	; 4
 a52:	3e 2e       	mov	r3, r30
 a54:	2a c0       	rjmp	.+84     	; 0xaaa <vfprintf+0x10c>
 a56:	f3 2d       	mov	r31, r3
 a58:	f8 60       	ori	r31, 0x08	; 8
 a5a:	1d c0       	rjmp	.+58     	; 0xa96 <vfprintf+0xf8>
 a5c:	37 fc       	sbrc	r3, 7
 a5e:	2d c0       	rjmp	.+90     	; 0xaba <vfprintf+0x11c>
 a60:	20 ed       	ldi	r18, 0xD0	; 208
 a62:	28 0f       	add	r18, r24
 a64:	2a 30       	cpi	r18, 0x0A	; 10
 a66:	40 f0       	brcs	.+16     	; 0xa78 <vfprintf+0xda>
 a68:	8e 32       	cpi	r24, 0x2E	; 46
 a6a:	b9 f4       	brne	.+46     	; 0xa9a <vfprintf+0xfc>
 a6c:	36 fc       	sbrc	r3, 6
 a6e:	75 c1       	rjmp	.+746    	; 0xd5a <vfprintf+0x3bc>
 a70:	23 2d       	mov	r18, r3
 a72:	20 64       	ori	r18, 0x40	; 64
 a74:	32 2e       	mov	r3, r18
 a76:	19 c0       	rjmp	.+50     	; 0xaaa <vfprintf+0x10c>
 a78:	36 fe       	sbrs	r3, 6
 a7a:	06 c0       	rjmp	.+12     	; 0xa88 <vfprintf+0xea>
 a7c:	8a e0       	ldi	r24, 0x0A	; 10
 a7e:	98 9e       	mul	r9, r24
 a80:	20 0d       	add	r18, r0
 a82:	11 24       	eor	r1, r1
 a84:	92 2e       	mov	r9, r18
 a86:	11 c0       	rjmp	.+34     	; 0xaaa <vfprintf+0x10c>
 a88:	ea e0       	ldi	r30, 0x0A	; 10
 a8a:	2e 9e       	mul	r2, r30
 a8c:	20 0d       	add	r18, r0
 a8e:	11 24       	eor	r1, r1
 a90:	22 2e       	mov	r2, r18
 a92:	f3 2d       	mov	r31, r3
 a94:	f0 62       	ori	r31, 0x20	; 32
 a96:	3f 2e       	mov	r3, r31
 a98:	08 c0       	rjmp	.+16     	; 0xaaa <vfprintf+0x10c>
 a9a:	8c 36       	cpi	r24, 0x6C	; 108
 a9c:	21 f4       	brne	.+8      	; 0xaa6 <vfprintf+0x108>
 a9e:	83 2d       	mov	r24, r3
 aa0:	80 68       	ori	r24, 0x80	; 128
 aa2:	38 2e       	mov	r3, r24
 aa4:	02 c0       	rjmp	.+4      	; 0xaaa <vfprintf+0x10c>
 aa6:	88 36       	cpi	r24, 0x68	; 104
 aa8:	41 f4       	brne	.+16     	; 0xaba <vfprintf+0x11c>
 aaa:	f7 01       	movw	r30, r14
 aac:	93 fd       	sbrc	r25, 3
 aae:	85 91       	lpm	r24, Z+
 ab0:	93 ff       	sbrs	r25, 3
 ab2:	81 91       	ld	r24, Z+
 ab4:	7f 01       	movw	r14, r30
 ab6:	81 11       	cpse	r24, r1
 ab8:	b3 cf       	rjmp	.-154    	; 0xa20 <vfprintf+0x82>
 aba:	98 2f       	mov	r25, r24
 abc:	9f 7d       	andi	r25, 0xDF	; 223
 abe:	95 54       	subi	r25, 0x45	; 69
 ac0:	93 30       	cpi	r25, 0x03	; 3
 ac2:	28 f4       	brcc	.+10     	; 0xace <vfprintf+0x130>
 ac4:	0c 5f       	subi	r16, 0xFC	; 252
 ac6:	1f 4f       	sbci	r17, 0xFF	; 255
 ac8:	9f e3       	ldi	r25, 0x3F	; 63
 aca:	99 83       	std	Y+1, r25	; 0x01
 acc:	0d c0       	rjmp	.+26     	; 0xae8 <vfprintf+0x14a>
 ace:	83 36       	cpi	r24, 0x63	; 99
 ad0:	31 f0       	breq	.+12     	; 0xade <vfprintf+0x140>
 ad2:	83 37       	cpi	r24, 0x73	; 115
 ad4:	71 f0       	breq	.+28     	; 0xaf2 <vfprintf+0x154>
 ad6:	83 35       	cpi	r24, 0x53	; 83
 ad8:	09 f0       	breq	.+2      	; 0xadc <vfprintf+0x13e>
 ada:	55 c0       	rjmp	.+170    	; 0xb86 <vfprintf+0x1e8>
 adc:	20 c0       	rjmp	.+64     	; 0xb1e <vfprintf+0x180>
 ade:	f8 01       	movw	r30, r16
 ae0:	80 81       	ld	r24, Z
 ae2:	89 83       	std	Y+1, r24	; 0x01
 ae4:	0e 5f       	subi	r16, 0xFE	; 254
 ae6:	1f 4f       	sbci	r17, 0xFF	; 255
 ae8:	88 24       	eor	r8, r8
 aea:	83 94       	inc	r8
 aec:	91 2c       	mov	r9, r1
 aee:	53 01       	movw	r10, r6
 af0:	12 c0       	rjmp	.+36     	; 0xb16 <vfprintf+0x178>
 af2:	28 01       	movw	r4, r16
 af4:	f2 e0       	ldi	r31, 0x02	; 2
 af6:	4f 0e       	add	r4, r31
 af8:	51 1c       	adc	r5, r1
 afa:	f8 01       	movw	r30, r16
 afc:	a0 80       	ld	r10, Z
 afe:	b1 80       	ldd	r11, Z+1	; 0x01
 b00:	36 fe       	sbrs	r3, 6
 b02:	03 c0       	rjmp	.+6      	; 0xb0a <vfprintf+0x16c>
 b04:	69 2d       	mov	r22, r9
 b06:	70 e0       	ldi	r23, 0x00	; 0
 b08:	02 c0       	rjmp	.+4      	; 0xb0e <vfprintf+0x170>
 b0a:	6f ef       	ldi	r22, 0xFF	; 255
 b0c:	7f ef       	ldi	r23, 0xFF	; 255
 b0e:	c5 01       	movw	r24, r10
 b10:	4e d1       	rcall	.+668    	; 0xdae <strnlen>
 b12:	4c 01       	movw	r8, r24
 b14:	82 01       	movw	r16, r4
 b16:	f3 2d       	mov	r31, r3
 b18:	ff 77       	andi	r31, 0x7F	; 127
 b1a:	3f 2e       	mov	r3, r31
 b1c:	15 c0       	rjmp	.+42     	; 0xb48 <vfprintf+0x1aa>
 b1e:	28 01       	movw	r4, r16
 b20:	22 e0       	ldi	r18, 0x02	; 2
 b22:	42 0e       	add	r4, r18
 b24:	51 1c       	adc	r5, r1
 b26:	f8 01       	movw	r30, r16
 b28:	a0 80       	ld	r10, Z
 b2a:	b1 80       	ldd	r11, Z+1	; 0x01
 b2c:	36 fe       	sbrs	r3, 6
 b2e:	03 c0       	rjmp	.+6      	; 0xb36 <vfprintf+0x198>
 b30:	69 2d       	mov	r22, r9
 b32:	70 e0       	ldi	r23, 0x00	; 0
 b34:	02 c0       	rjmp	.+4      	; 0xb3a <vfprintf+0x19c>
 b36:	6f ef       	ldi	r22, 0xFF	; 255
 b38:	7f ef       	ldi	r23, 0xFF	; 255
 b3a:	c5 01       	movw	r24, r10
 b3c:	2d d1       	rcall	.+602    	; 0xd98 <strnlen_P>
 b3e:	4c 01       	movw	r8, r24
 b40:	f3 2d       	mov	r31, r3
 b42:	f0 68       	ori	r31, 0x80	; 128
 b44:	3f 2e       	mov	r3, r31
 b46:	82 01       	movw	r16, r4
 b48:	33 fc       	sbrc	r3, 3
 b4a:	19 c0       	rjmp	.+50     	; 0xb7e <vfprintf+0x1e0>
 b4c:	82 2d       	mov	r24, r2
 b4e:	90 e0       	ldi	r25, 0x00	; 0
 b50:	88 16       	cp	r8, r24
 b52:	99 06       	cpc	r9, r25
 b54:	a0 f4       	brcc	.+40     	; 0xb7e <vfprintf+0x1e0>
 b56:	b6 01       	movw	r22, r12
 b58:	80 e2       	ldi	r24, 0x20	; 32
 b5a:	90 e0       	ldi	r25, 0x00	; 0
 b5c:	33 d1       	rcall	.+614    	; 0xdc4 <fputc>
 b5e:	2a 94       	dec	r2
 b60:	f5 cf       	rjmp	.-22     	; 0xb4c <vfprintf+0x1ae>
 b62:	f5 01       	movw	r30, r10
 b64:	37 fc       	sbrc	r3, 7
 b66:	85 91       	lpm	r24, Z+
 b68:	37 fe       	sbrs	r3, 7
 b6a:	81 91       	ld	r24, Z+
 b6c:	5f 01       	movw	r10, r30
 b6e:	b6 01       	movw	r22, r12
 b70:	90 e0       	ldi	r25, 0x00	; 0
 b72:	28 d1       	rcall	.+592    	; 0xdc4 <fputc>
 b74:	21 10       	cpse	r2, r1
 b76:	2a 94       	dec	r2
 b78:	21 e0       	ldi	r18, 0x01	; 1
 b7a:	82 1a       	sub	r8, r18
 b7c:	91 08       	sbc	r9, r1
 b7e:	81 14       	cp	r8, r1
 b80:	91 04       	cpc	r9, r1
 b82:	79 f7       	brne	.-34     	; 0xb62 <vfprintf+0x1c4>
 b84:	e1 c0       	rjmp	.+450    	; 0xd48 <vfprintf+0x3aa>
 b86:	84 36       	cpi	r24, 0x64	; 100
 b88:	11 f0       	breq	.+4      	; 0xb8e <vfprintf+0x1f0>
 b8a:	89 36       	cpi	r24, 0x69	; 105
 b8c:	39 f5       	brne	.+78     	; 0xbdc <vfprintf+0x23e>
 b8e:	f8 01       	movw	r30, r16
 b90:	37 fe       	sbrs	r3, 7
 b92:	07 c0       	rjmp	.+14     	; 0xba2 <vfprintf+0x204>
 b94:	60 81       	ld	r22, Z
 b96:	71 81       	ldd	r23, Z+1	; 0x01
 b98:	82 81       	ldd	r24, Z+2	; 0x02
 b9a:	93 81       	ldd	r25, Z+3	; 0x03
 b9c:	0c 5f       	subi	r16, 0xFC	; 252
 b9e:	1f 4f       	sbci	r17, 0xFF	; 255
 ba0:	08 c0       	rjmp	.+16     	; 0xbb2 <vfprintf+0x214>
 ba2:	60 81       	ld	r22, Z
 ba4:	71 81       	ldd	r23, Z+1	; 0x01
 ba6:	07 2e       	mov	r0, r23
 ba8:	00 0c       	add	r0, r0
 baa:	88 0b       	sbc	r24, r24
 bac:	99 0b       	sbc	r25, r25
 bae:	0e 5f       	subi	r16, 0xFE	; 254
 bb0:	1f 4f       	sbci	r17, 0xFF	; 255
 bb2:	f3 2d       	mov	r31, r3
 bb4:	ff 76       	andi	r31, 0x6F	; 111
 bb6:	3f 2e       	mov	r3, r31
 bb8:	97 ff       	sbrs	r25, 7
 bba:	09 c0       	rjmp	.+18     	; 0xbce <vfprintf+0x230>
 bbc:	90 95       	com	r25
 bbe:	80 95       	com	r24
 bc0:	70 95       	com	r23
 bc2:	61 95       	neg	r22
 bc4:	7f 4f       	sbci	r23, 0xFF	; 255
 bc6:	8f 4f       	sbci	r24, 0xFF	; 255
 bc8:	9f 4f       	sbci	r25, 0xFF	; 255
 bca:	f0 68       	ori	r31, 0x80	; 128
 bcc:	3f 2e       	mov	r3, r31
 bce:	2a e0       	ldi	r18, 0x0A	; 10
 bd0:	30 e0       	ldi	r19, 0x00	; 0
 bd2:	a3 01       	movw	r20, r6
 bd4:	33 d1       	rcall	.+614    	; 0xe3c <__ultoa_invert>
 bd6:	88 2e       	mov	r8, r24
 bd8:	86 18       	sub	r8, r6
 bda:	44 c0       	rjmp	.+136    	; 0xc64 <vfprintf+0x2c6>
 bdc:	85 37       	cpi	r24, 0x75	; 117
 bde:	31 f4       	brne	.+12     	; 0xbec <vfprintf+0x24e>
 be0:	23 2d       	mov	r18, r3
 be2:	2f 7e       	andi	r18, 0xEF	; 239
 be4:	b2 2e       	mov	r11, r18
 be6:	2a e0       	ldi	r18, 0x0A	; 10
 be8:	30 e0       	ldi	r19, 0x00	; 0
 bea:	25 c0       	rjmp	.+74     	; 0xc36 <vfprintf+0x298>
 bec:	93 2d       	mov	r25, r3
 bee:	99 7f       	andi	r25, 0xF9	; 249
 bf0:	b9 2e       	mov	r11, r25
 bf2:	8f 36       	cpi	r24, 0x6F	; 111
 bf4:	c1 f0       	breq	.+48     	; 0xc26 <vfprintf+0x288>
 bf6:	18 f4       	brcc	.+6      	; 0xbfe <vfprintf+0x260>
 bf8:	88 35       	cpi	r24, 0x58	; 88
 bfa:	79 f0       	breq	.+30     	; 0xc1a <vfprintf+0x27c>
 bfc:	ae c0       	rjmp	.+348    	; 0xd5a <vfprintf+0x3bc>
 bfe:	80 37       	cpi	r24, 0x70	; 112
 c00:	19 f0       	breq	.+6      	; 0xc08 <vfprintf+0x26a>
 c02:	88 37       	cpi	r24, 0x78	; 120
 c04:	21 f0       	breq	.+8      	; 0xc0e <vfprintf+0x270>
 c06:	a9 c0       	rjmp	.+338    	; 0xd5a <vfprintf+0x3bc>
 c08:	e9 2f       	mov	r30, r25
 c0a:	e0 61       	ori	r30, 0x10	; 16
 c0c:	be 2e       	mov	r11, r30
 c0e:	b4 fe       	sbrs	r11, 4
 c10:	0d c0       	rjmp	.+26     	; 0xc2c <vfprintf+0x28e>
 c12:	fb 2d       	mov	r31, r11
 c14:	f4 60       	ori	r31, 0x04	; 4
 c16:	bf 2e       	mov	r11, r31
 c18:	09 c0       	rjmp	.+18     	; 0xc2c <vfprintf+0x28e>
 c1a:	34 fe       	sbrs	r3, 4
 c1c:	0a c0       	rjmp	.+20     	; 0xc32 <vfprintf+0x294>
 c1e:	29 2f       	mov	r18, r25
 c20:	26 60       	ori	r18, 0x06	; 6
 c22:	b2 2e       	mov	r11, r18
 c24:	06 c0       	rjmp	.+12     	; 0xc32 <vfprintf+0x294>
 c26:	28 e0       	ldi	r18, 0x08	; 8
 c28:	30 e0       	ldi	r19, 0x00	; 0
 c2a:	05 c0       	rjmp	.+10     	; 0xc36 <vfprintf+0x298>
 c2c:	20 e1       	ldi	r18, 0x10	; 16
 c2e:	30 e0       	ldi	r19, 0x00	; 0
 c30:	02 c0       	rjmp	.+4      	; 0xc36 <vfprintf+0x298>
 c32:	20 e1       	ldi	r18, 0x10	; 16
 c34:	32 e0       	ldi	r19, 0x02	; 2
 c36:	f8 01       	movw	r30, r16
 c38:	b7 fe       	sbrs	r11, 7
 c3a:	07 c0       	rjmp	.+14     	; 0xc4a <vfprintf+0x2ac>
 c3c:	60 81       	ld	r22, Z
 c3e:	71 81       	ldd	r23, Z+1	; 0x01
 c40:	82 81       	ldd	r24, Z+2	; 0x02
 c42:	93 81       	ldd	r25, Z+3	; 0x03
 c44:	0c 5f       	subi	r16, 0xFC	; 252
 c46:	1f 4f       	sbci	r17, 0xFF	; 255
 c48:	06 c0       	rjmp	.+12     	; 0xc56 <vfprintf+0x2b8>
 c4a:	60 81       	ld	r22, Z
 c4c:	71 81       	ldd	r23, Z+1	; 0x01
 c4e:	80 e0       	ldi	r24, 0x00	; 0
 c50:	90 e0       	ldi	r25, 0x00	; 0
 c52:	0e 5f       	subi	r16, 0xFE	; 254
 c54:	1f 4f       	sbci	r17, 0xFF	; 255
 c56:	a3 01       	movw	r20, r6
 c58:	f1 d0       	rcall	.+482    	; 0xe3c <__ultoa_invert>
 c5a:	88 2e       	mov	r8, r24
 c5c:	86 18       	sub	r8, r6
 c5e:	fb 2d       	mov	r31, r11
 c60:	ff 77       	andi	r31, 0x7F	; 127
 c62:	3f 2e       	mov	r3, r31
 c64:	36 fe       	sbrs	r3, 6
 c66:	0d c0       	rjmp	.+26     	; 0xc82 <vfprintf+0x2e4>
 c68:	23 2d       	mov	r18, r3
 c6a:	2e 7f       	andi	r18, 0xFE	; 254
 c6c:	a2 2e       	mov	r10, r18
 c6e:	89 14       	cp	r8, r9
 c70:	58 f4       	brcc	.+22     	; 0xc88 <vfprintf+0x2ea>
 c72:	34 fe       	sbrs	r3, 4
 c74:	0b c0       	rjmp	.+22     	; 0xc8c <vfprintf+0x2ee>
 c76:	32 fc       	sbrc	r3, 2
 c78:	09 c0       	rjmp	.+18     	; 0xc8c <vfprintf+0x2ee>
 c7a:	83 2d       	mov	r24, r3
 c7c:	8e 7e       	andi	r24, 0xEE	; 238
 c7e:	a8 2e       	mov	r10, r24
 c80:	05 c0       	rjmp	.+10     	; 0xc8c <vfprintf+0x2ee>
 c82:	b8 2c       	mov	r11, r8
 c84:	a3 2c       	mov	r10, r3
 c86:	03 c0       	rjmp	.+6      	; 0xc8e <vfprintf+0x2f0>
 c88:	b8 2c       	mov	r11, r8
 c8a:	01 c0       	rjmp	.+2      	; 0xc8e <vfprintf+0x2f0>
 c8c:	b9 2c       	mov	r11, r9
 c8e:	a4 fe       	sbrs	r10, 4
 c90:	0f c0       	rjmp	.+30     	; 0xcb0 <vfprintf+0x312>
 c92:	fe 01       	movw	r30, r28
 c94:	e8 0d       	add	r30, r8
 c96:	f1 1d       	adc	r31, r1
 c98:	80 81       	ld	r24, Z
 c9a:	80 33       	cpi	r24, 0x30	; 48
 c9c:	21 f4       	brne	.+8      	; 0xca6 <vfprintf+0x308>
 c9e:	9a 2d       	mov	r25, r10
 ca0:	99 7e       	andi	r25, 0xE9	; 233
 ca2:	a9 2e       	mov	r10, r25
 ca4:	09 c0       	rjmp	.+18     	; 0xcb8 <vfprintf+0x31a>
 ca6:	a2 fe       	sbrs	r10, 2
 ca8:	06 c0       	rjmp	.+12     	; 0xcb6 <vfprintf+0x318>
 caa:	b3 94       	inc	r11
 cac:	b3 94       	inc	r11
 cae:	04 c0       	rjmp	.+8      	; 0xcb8 <vfprintf+0x31a>
 cb0:	8a 2d       	mov	r24, r10
 cb2:	86 78       	andi	r24, 0x86	; 134
 cb4:	09 f0       	breq	.+2      	; 0xcb8 <vfprintf+0x31a>
 cb6:	b3 94       	inc	r11
 cb8:	a3 fc       	sbrc	r10, 3
 cba:	10 c0       	rjmp	.+32     	; 0xcdc <vfprintf+0x33e>
 cbc:	a0 fe       	sbrs	r10, 0
 cbe:	06 c0       	rjmp	.+12     	; 0xccc <vfprintf+0x32e>
 cc0:	b2 14       	cp	r11, r2
 cc2:	80 f4       	brcc	.+32     	; 0xce4 <vfprintf+0x346>
 cc4:	28 0c       	add	r2, r8
 cc6:	92 2c       	mov	r9, r2
 cc8:	9b 18       	sub	r9, r11
 cca:	0d c0       	rjmp	.+26     	; 0xce6 <vfprintf+0x348>
 ccc:	b2 14       	cp	r11, r2
 cce:	58 f4       	brcc	.+22     	; 0xce6 <vfprintf+0x348>
 cd0:	b6 01       	movw	r22, r12
 cd2:	80 e2       	ldi	r24, 0x20	; 32
 cd4:	90 e0       	ldi	r25, 0x00	; 0
 cd6:	76 d0       	rcall	.+236    	; 0xdc4 <fputc>
 cd8:	b3 94       	inc	r11
 cda:	f8 cf       	rjmp	.-16     	; 0xccc <vfprintf+0x32e>
 cdc:	b2 14       	cp	r11, r2
 cde:	18 f4       	brcc	.+6      	; 0xce6 <vfprintf+0x348>
 ce0:	2b 18       	sub	r2, r11
 ce2:	02 c0       	rjmp	.+4      	; 0xce8 <vfprintf+0x34a>
 ce4:	98 2c       	mov	r9, r8
 ce6:	21 2c       	mov	r2, r1
 ce8:	a4 fe       	sbrs	r10, 4
 cea:	0f c0       	rjmp	.+30     	; 0xd0a <vfprintf+0x36c>
 cec:	b6 01       	movw	r22, r12
 cee:	80 e3       	ldi	r24, 0x30	; 48
 cf0:	90 e0       	ldi	r25, 0x00	; 0
 cf2:	68 d0       	rcall	.+208    	; 0xdc4 <fputc>
 cf4:	a2 fe       	sbrs	r10, 2
 cf6:	16 c0       	rjmp	.+44     	; 0xd24 <vfprintf+0x386>
 cf8:	a1 fc       	sbrc	r10, 1
 cfa:	03 c0       	rjmp	.+6      	; 0xd02 <vfprintf+0x364>
 cfc:	88 e7       	ldi	r24, 0x78	; 120
 cfe:	90 e0       	ldi	r25, 0x00	; 0
 d00:	02 c0       	rjmp	.+4      	; 0xd06 <vfprintf+0x368>
 d02:	88 e5       	ldi	r24, 0x58	; 88
 d04:	90 e0       	ldi	r25, 0x00	; 0
 d06:	b6 01       	movw	r22, r12
 d08:	0c c0       	rjmp	.+24     	; 0xd22 <vfprintf+0x384>
 d0a:	8a 2d       	mov	r24, r10
 d0c:	86 78       	andi	r24, 0x86	; 134
 d0e:	51 f0       	breq	.+20     	; 0xd24 <vfprintf+0x386>
 d10:	a1 fe       	sbrs	r10, 1
 d12:	02 c0       	rjmp	.+4      	; 0xd18 <vfprintf+0x37a>
 d14:	8b e2       	ldi	r24, 0x2B	; 43
 d16:	01 c0       	rjmp	.+2      	; 0xd1a <vfprintf+0x37c>
 d18:	80 e2       	ldi	r24, 0x20	; 32
 d1a:	a7 fc       	sbrc	r10, 7
 d1c:	8d e2       	ldi	r24, 0x2D	; 45
 d1e:	b6 01       	movw	r22, r12
 d20:	90 e0       	ldi	r25, 0x00	; 0
 d22:	50 d0       	rcall	.+160    	; 0xdc4 <fputc>
 d24:	89 14       	cp	r8, r9
 d26:	30 f4       	brcc	.+12     	; 0xd34 <vfprintf+0x396>
 d28:	b6 01       	movw	r22, r12
 d2a:	80 e3       	ldi	r24, 0x30	; 48
 d2c:	90 e0       	ldi	r25, 0x00	; 0
 d2e:	4a d0       	rcall	.+148    	; 0xdc4 <fputc>
 d30:	9a 94       	dec	r9
 d32:	f8 cf       	rjmp	.-16     	; 0xd24 <vfprintf+0x386>
 d34:	8a 94       	dec	r8
 d36:	f3 01       	movw	r30, r6
 d38:	e8 0d       	add	r30, r8
 d3a:	f1 1d       	adc	r31, r1
 d3c:	80 81       	ld	r24, Z
 d3e:	b6 01       	movw	r22, r12
 d40:	90 e0       	ldi	r25, 0x00	; 0
 d42:	40 d0       	rcall	.+128    	; 0xdc4 <fputc>
 d44:	81 10       	cpse	r8, r1
 d46:	f6 cf       	rjmp	.-20     	; 0xd34 <vfprintf+0x396>
 d48:	22 20       	and	r2, r2
 d4a:	09 f4       	brne	.+2      	; 0xd4e <vfprintf+0x3b0>
 d4c:	4e ce       	rjmp	.-868    	; 0x9ea <vfprintf+0x4c>
 d4e:	b6 01       	movw	r22, r12
 d50:	80 e2       	ldi	r24, 0x20	; 32
 d52:	90 e0       	ldi	r25, 0x00	; 0
 d54:	37 d0       	rcall	.+110    	; 0xdc4 <fputc>
 d56:	2a 94       	dec	r2
 d58:	f7 cf       	rjmp	.-18     	; 0xd48 <vfprintf+0x3aa>
 d5a:	f6 01       	movw	r30, r12
 d5c:	86 81       	ldd	r24, Z+6	; 0x06
 d5e:	97 81       	ldd	r25, Z+7	; 0x07
 d60:	02 c0       	rjmp	.+4      	; 0xd66 <vfprintf+0x3c8>
 d62:	8f ef       	ldi	r24, 0xFF	; 255
 d64:	9f ef       	ldi	r25, 0xFF	; 255
 d66:	2b 96       	adiw	r28, 0x0b	; 11
 d68:	0f b6       	in	r0, 0x3f	; 63
 d6a:	f8 94       	cli
 d6c:	de bf       	out	0x3e, r29	; 62
 d6e:	0f be       	out	0x3f, r0	; 63
 d70:	cd bf       	out	0x3d, r28	; 61
 d72:	df 91       	pop	r29
 d74:	cf 91       	pop	r28
 d76:	1f 91       	pop	r17
 d78:	0f 91       	pop	r16
 d7a:	ff 90       	pop	r15
 d7c:	ef 90       	pop	r14
 d7e:	df 90       	pop	r13
 d80:	cf 90       	pop	r12
 d82:	bf 90       	pop	r11
 d84:	af 90       	pop	r10
 d86:	9f 90       	pop	r9
 d88:	8f 90       	pop	r8
 d8a:	7f 90       	pop	r7
 d8c:	6f 90       	pop	r6
 d8e:	5f 90       	pop	r5
 d90:	4f 90       	pop	r4
 d92:	3f 90       	pop	r3
 d94:	2f 90       	pop	r2
 d96:	08 95       	ret

00000d98 <strnlen_P>:
 d98:	fc 01       	movw	r30, r24
 d9a:	05 90       	lpm	r0, Z+
 d9c:	61 50       	subi	r22, 0x01	; 1
 d9e:	70 40       	sbci	r23, 0x00	; 0
 da0:	01 10       	cpse	r0, r1
 da2:	d8 f7       	brcc	.-10     	; 0xd9a <strnlen_P+0x2>
 da4:	80 95       	com	r24
 da6:	90 95       	com	r25
 da8:	8e 0f       	add	r24, r30
 daa:	9f 1f       	adc	r25, r31
 dac:	08 95       	ret

00000dae <strnlen>:
 dae:	fc 01       	movw	r30, r24
 db0:	61 50       	subi	r22, 0x01	; 1
 db2:	70 40       	sbci	r23, 0x00	; 0
 db4:	01 90       	ld	r0, Z+
 db6:	01 10       	cpse	r0, r1
 db8:	d8 f7       	brcc	.-10     	; 0xdb0 <strnlen+0x2>
 dba:	80 95       	com	r24
 dbc:	90 95       	com	r25
 dbe:	8e 0f       	add	r24, r30
 dc0:	9f 1f       	adc	r25, r31
 dc2:	08 95       	ret

00000dc4 <fputc>:
 dc4:	0f 93       	push	r16
 dc6:	1f 93       	push	r17
 dc8:	cf 93       	push	r28
 dca:	df 93       	push	r29
 dcc:	fb 01       	movw	r30, r22
 dce:	23 81       	ldd	r18, Z+3	; 0x03
 dd0:	21 fd       	sbrc	r18, 1
 dd2:	03 c0       	rjmp	.+6      	; 0xdda <fputc+0x16>
 dd4:	8f ef       	ldi	r24, 0xFF	; 255
 dd6:	9f ef       	ldi	r25, 0xFF	; 255
 dd8:	2c c0       	rjmp	.+88     	; 0xe32 <fputc+0x6e>
 dda:	22 ff       	sbrs	r18, 2
 ddc:	16 c0       	rjmp	.+44     	; 0xe0a <fputc+0x46>
 dde:	46 81       	ldd	r20, Z+6	; 0x06
 de0:	57 81       	ldd	r21, Z+7	; 0x07
 de2:	24 81       	ldd	r18, Z+4	; 0x04
 de4:	35 81       	ldd	r19, Z+5	; 0x05
 de6:	42 17       	cp	r20, r18
 de8:	53 07       	cpc	r21, r19
 dea:	44 f4       	brge	.+16     	; 0xdfc <fputc+0x38>
 dec:	a0 81       	ld	r26, Z
 dee:	b1 81       	ldd	r27, Z+1	; 0x01
 df0:	9d 01       	movw	r18, r26
 df2:	2f 5f       	subi	r18, 0xFF	; 255
 df4:	3f 4f       	sbci	r19, 0xFF	; 255
 df6:	31 83       	std	Z+1, r19	; 0x01
 df8:	20 83       	st	Z, r18
 dfa:	8c 93       	st	X, r24
 dfc:	26 81       	ldd	r18, Z+6	; 0x06
 dfe:	37 81       	ldd	r19, Z+7	; 0x07
 e00:	2f 5f       	subi	r18, 0xFF	; 255
 e02:	3f 4f       	sbci	r19, 0xFF	; 255
 e04:	37 83       	std	Z+7, r19	; 0x07
 e06:	26 83       	std	Z+6, r18	; 0x06
 e08:	14 c0       	rjmp	.+40     	; 0xe32 <fputc+0x6e>
 e0a:	8b 01       	movw	r16, r22
 e0c:	ec 01       	movw	r28, r24
 e0e:	fb 01       	movw	r30, r22
 e10:	00 84       	ldd	r0, Z+8	; 0x08
 e12:	f1 85       	ldd	r31, Z+9	; 0x09
 e14:	e0 2d       	mov	r30, r0
 e16:	19 95       	eicall
 e18:	89 2b       	or	r24, r25
 e1a:	e1 f6       	brne	.-72     	; 0xdd4 <fputc+0x10>
 e1c:	d8 01       	movw	r26, r16
 e1e:	16 96       	adiw	r26, 0x06	; 6
 e20:	8d 91       	ld	r24, X+
 e22:	9c 91       	ld	r25, X
 e24:	17 97       	sbiw	r26, 0x07	; 7
 e26:	01 96       	adiw	r24, 0x01	; 1
 e28:	17 96       	adiw	r26, 0x07	; 7
 e2a:	9c 93       	st	X, r25
 e2c:	8e 93       	st	-X, r24
 e2e:	16 97       	sbiw	r26, 0x06	; 6
 e30:	ce 01       	movw	r24, r28
 e32:	df 91       	pop	r29
 e34:	cf 91       	pop	r28
 e36:	1f 91       	pop	r17
 e38:	0f 91       	pop	r16
 e3a:	08 95       	ret

00000e3c <__ultoa_invert>:
 e3c:	fa 01       	movw	r30, r20
 e3e:	aa 27       	eor	r26, r26
 e40:	28 30       	cpi	r18, 0x08	; 8
 e42:	51 f1       	breq	.+84     	; 0xe98 <__ultoa_invert+0x5c>
 e44:	20 31       	cpi	r18, 0x10	; 16
 e46:	81 f1       	breq	.+96     	; 0xea8 <__ultoa_invert+0x6c>
 e48:	e8 94       	clt
 e4a:	6f 93       	push	r22
 e4c:	6e 7f       	andi	r22, 0xFE	; 254
 e4e:	6e 5f       	subi	r22, 0xFE	; 254
 e50:	7f 4f       	sbci	r23, 0xFF	; 255
 e52:	8f 4f       	sbci	r24, 0xFF	; 255
 e54:	9f 4f       	sbci	r25, 0xFF	; 255
 e56:	af 4f       	sbci	r26, 0xFF	; 255
 e58:	b1 e0       	ldi	r27, 0x01	; 1
 e5a:	3e d0       	rcall	.+124    	; 0xed8 <__ultoa_invert+0x9c>
 e5c:	b4 e0       	ldi	r27, 0x04	; 4
 e5e:	3c d0       	rcall	.+120    	; 0xed8 <__ultoa_invert+0x9c>
 e60:	67 0f       	add	r22, r23
 e62:	78 1f       	adc	r23, r24
 e64:	89 1f       	adc	r24, r25
 e66:	9a 1f       	adc	r25, r26
 e68:	a1 1d       	adc	r26, r1
 e6a:	68 0f       	add	r22, r24
 e6c:	79 1f       	adc	r23, r25
 e6e:	8a 1f       	adc	r24, r26
 e70:	91 1d       	adc	r25, r1
 e72:	a1 1d       	adc	r26, r1
 e74:	6a 0f       	add	r22, r26
 e76:	71 1d       	adc	r23, r1
 e78:	81 1d       	adc	r24, r1
 e7a:	91 1d       	adc	r25, r1
 e7c:	a1 1d       	adc	r26, r1
 e7e:	20 d0       	rcall	.+64     	; 0xec0 <__ultoa_invert+0x84>
 e80:	09 f4       	brne	.+2      	; 0xe84 <__ultoa_invert+0x48>
 e82:	68 94       	set
 e84:	3f 91       	pop	r19
 e86:	2a e0       	ldi	r18, 0x0A	; 10
 e88:	26 9f       	mul	r18, r22
 e8a:	11 24       	eor	r1, r1
 e8c:	30 19       	sub	r19, r0
 e8e:	30 5d       	subi	r19, 0xD0	; 208
 e90:	31 93       	st	Z+, r19
 e92:	de f6       	brtc	.-74     	; 0xe4a <__ultoa_invert+0xe>
 e94:	cf 01       	movw	r24, r30
 e96:	08 95       	ret
 e98:	46 2f       	mov	r20, r22
 e9a:	47 70       	andi	r20, 0x07	; 7
 e9c:	40 5d       	subi	r20, 0xD0	; 208
 e9e:	41 93       	st	Z+, r20
 ea0:	b3 e0       	ldi	r27, 0x03	; 3
 ea2:	0f d0       	rcall	.+30     	; 0xec2 <__ultoa_invert+0x86>
 ea4:	c9 f7       	brne	.-14     	; 0xe98 <__ultoa_invert+0x5c>
 ea6:	f6 cf       	rjmp	.-20     	; 0xe94 <__ultoa_invert+0x58>
 ea8:	46 2f       	mov	r20, r22
 eaa:	4f 70       	andi	r20, 0x0F	; 15
 eac:	40 5d       	subi	r20, 0xD0	; 208
 eae:	4a 33       	cpi	r20, 0x3A	; 58
 eb0:	18 f0       	brcs	.+6      	; 0xeb8 <__ultoa_invert+0x7c>
 eb2:	49 5d       	subi	r20, 0xD9	; 217
 eb4:	31 fd       	sbrc	r19, 1
 eb6:	40 52       	subi	r20, 0x20	; 32
 eb8:	41 93       	st	Z+, r20
 eba:	02 d0       	rcall	.+4      	; 0xec0 <__ultoa_invert+0x84>
 ebc:	a9 f7       	brne	.-22     	; 0xea8 <__ultoa_invert+0x6c>
 ebe:	ea cf       	rjmp	.-44     	; 0xe94 <__ultoa_invert+0x58>
 ec0:	b4 e0       	ldi	r27, 0x04	; 4
 ec2:	a6 95       	lsr	r26
 ec4:	97 95       	ror	r25
 ec6:	87 95       	ror	r24
 ec8:	77 95       	ror	r23
 eca:	67 95       	ror	r22
 ecc:	ba 95       	dec	r27
 ece:	c9 f7       	brne	.-14     	; 0xec2 <__ultoa_invert+0x86>
 ed0:	00 97       	sbiw	r24, 0x00	; 0
 ed2:	61 05       	cpc	r22, r1
 ed4:	71 05       	cpc	r23, r1
 ed6:	08 95       	ret
 ed8:	9b 01       	movw	r18, r22
 eda:	ac 01       	movw	r20, r24
 edc:	0a 2e       	mov	r0, r26
 ede:	06 94       	lsr	r0
 ee0:	57 95       	ror	r21
 ee2:	47 95       	ror	r20
 ee4:	37 95       	ror	r19
 ee6:	27 95       	ror	r18
 ee8:	ba 95       	dec	r27
 eea:	c9 f7       	brne	.-14     	; 0xede <__ultoa_invert+0xa2>
 eec:	62 0f       	add	r22, r18
 eee:	73 1f       	adc	r23, r19
 ef0:	84 1f       	adc	r24, r20
 ef2:	95 1f       	adc	r25, r21
 ef4:	a0 1d       	adc	r26, r0
 ef6:	08 95       	ret

00000ef8 <_exit>:
 ef8:	f8 94       	cli

00000efa <__stop_program>:
 efa:	ff cf       	rjmp	.-2      	; 0xefa <__stop_program>
